{"version":3,"file":"static/js/136.99b5e9e2-c3e32.chunk.js","mappings":"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","sources":["../node_modules/@buidlhub/buidlhub-ens-notifications/dist/BuidlhubEnsClient.js","../node_modules/@buidlhub/buidlhub-ens-notifications/dist/components/Email/EmailComponent.js","../node_modules/@buidlhub/buidlhub-ens-notifications/dist/components/LoadingComponent/LoadingComponent.js","../node_modules/@buidlhub/buidlhub-ens-notifications/dist/index.js","../node_modules/@emotion/styled/dist/styled.browser.esm.js","../node_modules/decimal.js/decimal.js","../node_modules/ethval/src/index.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_castPath.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_toKey.js","../node_modules/lodash/get.js","../node_modules/lodash/isSymbol.js","../node_modules/lodash/last.js","../node_modules/lodash/memoize.js","../node_modules/lodash/toString.js","../node_modules/react-add-to-calendar-hoc/lib/enums.js","../node_modules/react-add-to-calendar-hoc/lib/index.js","../node_modules/react-add-to-calendar-hoc/lib/utils.js","../node_modules/web3-utils/lib/index.js","../node_modules/web3-utils/lib/soliditySha3.js","../node_modules/web3-utils/lib/utils.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst DEFAULT_ENDPOINT = 'https://ens.buidlhub.com';\n\nclass BuidlhubEnsClient {\n  constructor() {\n    let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const endpoint = props.endpoint || DEFAULT_ENDPOINT;\n    this.endpoint = endpoint;\n  }\n\n  async addSubscription() {\n    let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    this._validatePropsExist(props, ['emailAddress', 'publicAddress']);\n\n    const {\n      publicAddress,\n      emailAddress,\n      language\n    } = props;\n    return this._post('/register', {\n      walletAddress: publicAddress,\n      email: emailAddress,\n      language\n    });\n  }\n\n  async getSubscription() {\n    let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    this._validatePropsExist(props, ['publicAddress']);\n\n    const {\n      publicAddress,\n      language\n    } = props;\n    return this._post('/lookupRegistration', {\n      walletAddress: publicAddress,\n      language\n    });\n  }\n\n  _validatePropsExist(props, requiredProps) {\n    for (const propertyName of requiredProps) {\n      const propertyValue = props[propertyName];\n\n      if (!propertyValue) {\n        throw new Error(\"\".concat(propertyName, \" is required\"));\n      }\n    }\n  }\n\n  async _post(resourcePath, body) {\n    var _window, _window$location;\n\n    const url = this.endpoint + resourcePath;\n    const options = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json;charset=UTF-8',\n        'x-referrer': (_window = window) === null || _window === void 0 ? void 0 : (_window$location = _window.location) === null || _window$location === void 0 ? void 0 : _window$location.hostname\n      },\n      body: JSON.stringify(body)\n    };\n    const response = await this._fetchWithRetry(url, options);\n    const data = response.json();\n\n    if (data.error) {\n      throw new Error(data.error);\n    }\n\n    return data;\n  }\n\n  async _fetchWithRetry(url, options) {\n    let maxAttempts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;\n    let lastError = null;\n\n    for (let i = 0; i < maxAttempts; i++) {\n      try {\n        return await fetch(url, options);\n      } catch (error) {\n        lastError = error;\n      } // sleep before retry\n\n\n      await new Promise(resolve => setTimeout(resolve, 250));\n    }\n\n    throw lastError;\n  }\n\n}\n\nexports.default = BuidlhubEnsClient;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _core = require(\"@emotion/core\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _styled = _interopRequireDefault(require(\"@emotion/styled\"));\n\nvar _BuidlhubEnsClient = _interopRequireDefault(require(\"../../BuidlhubEnsClient\"));\n\nvar _LoadingComponent = _interopRequireDefault(require(\"../LoadingComponent/LoadingComponent\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst DEFAULT_TRANSLATION = {\n  cancel: 'Cancel',\n  close: 'Close',\n  error: 'Error',\n  loading: 'Registering subscription',\n  placeholder: 'Enter Email address',\n  registerSuccess: \"Please check confirmation email to complete subscription.\",\n  registerFailure: \"Sorry, unable to setup subscription.\",\n  invalidEmailAddress: \"Invalid email address\",\n  submit: 'Submit'\n};\nconst DEFAULT_STYLES = {\n  actionsContainer: \"\\n        display: flex;\\n        justify-content: flex-end;\\n    \",\n  emailInput: \"\\n        width: 100%; \\n        margin: 1em 0;\\n        padding: 1px 2px 1px 10px;\\n    \"\n};\n\nclass EmailComponent extends _react.default.Component {\n  constructor(props) {\n    super(props);\n    this.buidlhub = new _BuidlhubEnsClient.default();\n    const emailAddress = props.emailAddress || '';\n    const translation = props.translation || {};\n    this.translation = _objectSpread(_objectSpread({}, DEFAULT_TRANSLATION), translation);\n    this.state = {\n      loading: false,\n      statusMessage: null,\n      hasSubmitted: false,\n      subscription: {},\n      emailAddress // // FIXME: show loading state\n      // hasSubmitted: true,\n      // loading: true,\n      // error: null,\n      // statusMessage: this.translation.loading\n      // FIXME: show completed state\n      // hasSubmitted: true,\n      // statusMessage: this.translation.registerSuccess \n      // \"Sorry, unable to setup subscription.\";\n\n    };\n    this.components = this.buildStyledComponents(props); // bind 'this'\n\n    this.getClient = this.getClient.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleEmailInputChange = this.handleEmailInputChange.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.validateForm = this.validateForm.bind(this);\n  }\n\n  buildStyledComponent(props, prefix, defaultType) {\n    const passedComponent = props[\"\".concat(prefix, \"Component\")];\n    let component = passedComponent || defaultType;\n    const componentStyle = passedComponent ? null : props[\"\".concat(prefix, \"Style\")] || DEFAULT_STYLES[prefix];\n\n    if (componentStyle) {\n      console.log(\"styling \".concat(prefix, \"...\"));\n      component = (0, _styled.default)(component)(componentStyle);\n    }\n\n    return component;\n  } // https://stackoverflow.com/questions/22573494/react-js-input-losing-focus-when-rerendering\n\n\n  buildStyledComponents(props) {\n    const ActionsContainer = this.buildStyledComponent(props, 'actionsContainer', 'div');\n    const Cancel = this.buildStyledComponent(props, 'cancel', 'button');\n    const EmailInput = this.buildStyledComponent(props, 'emailInput', 'input');\n    const Form = this.buildStyledComponent(props, 'form', 'form');\n    const Label = this.buildStyledComponent(props, 'label', 'label');\n    const MessageContainer = this.buildStyledComponent(props, 'messageContainer', 'div');\n    const Submit = this.buildStyledComponent(props, 'submit', 'submit');\n    const Loading = this.props.loadingComponent || _LoadingComponent.default;\n    return {\n      ActionsContainer,\n      Cancel,\n      EmailInput,\n      Form,\n      Label,\n      Loading,\n      MessageContainer,\n      Submit\n    };\n  }\n\n  async getClient() {\n    return Promise.resolve(this.buidlhub);\n  }\n\n  async handleCancel(event) {\n    if (this.props.onCancel) {\n      this.props.onCancel(event);\n    }\n  }\n\n  async handleFormSubmit(event) {\n    event.preventDefault();\n\n    if (!this.validateForm()) {\n      return;\n    }\n\n    this.setState({\n      loading: true,\n      hasSubmitted: true,\n      error: null,\n      statusMessage: this.translation.loading\n    });\n    const buidlhub = await this.getClient();\n    const {\n      publicAddress,\n      language\n    } = this.props;\n    const {\n      emailAddress\n    } = this.state;\n\n    try {\n      const response = await buidlhub.addSubscription({\n        publicAddress,\n        emailAddress,\n        language\n      });\n      const isRegistered = response.status;\n      const statusMessage = isRegistered ? this.translation.registerSuccess : this.translation.registerFailure;\n      this.setState({\n        loading: false,\n        statusMessage\n      });\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  validateForm() {\n    // validate email address\n    this.emailInputElem;\n    const isValid = typeof this.emailInputElem.checkValidity === 'function' ? this.emailInputElem.checkValidity() : /\\S+@\\S+\\.\\S+/.test(this.emailInputElem.value);\n\n    if (!isValid) {\n      this.setState({\n        hasSubmitted: true,\n        loading: false,\n        statusMessage: this.translation.invalidEmailAddress\n      });\n    }\n\n    return isValid;\n  }\n\n  handleError(error) {\n    this.setState({\n      loading: false,\n      statusMessage: this.translation.error + \": \" + error.message\n    });\n  }\n\n  handleEmailInputChange(event) {\n    this.setState({\n      emailAddress: event.target.value\n    });\n  }\n\n  render() {\n    const {\n      Cancel,\n      Form,\n      Loading,\n      MessageContainer,\n      ActionsContainer,\n      Submit\n    } = this.components;\n    let body = null;\n    let formActions = null; //(<Cancel type='button' onClick={this.handleCancel}>{this.translation.close}</Cancel>);\n\n    if (!this.state.hasSubmitted) {\n      body = this._renderFormBody();\n      formActions = (0, _core.jsx)(_react.default.Fragment, null, (0, _core.jsx)(Cancel, {\n        type: \"button\",\n        onClick: this.handleCancel\n      }, this.translation.cancel), (0, _core.jsx)(Submit, {\n        type: \"submit\"\n      }, this.translation.submit));\n    }\n\n    return (0, _core.jsx)(Form, {\n      onSubmit: this.handleFormSubmit\n    }, body, this.state.statusMessage && (0, _core.jsx)(MessageContainer, null, this.state.loading && (0, _core.jsx)(Loading, null), (0, _core.jsx)(\"span\", {\n      className: \"status\"\n    }, this.state.statusMessage)), (0, _core.jsx)(ActionsContainer, null, formActions));\n  }\n\n  _renderFormBody() {\n    const address = this.props.publicAddress;\n    const className = this.props.className || 'buildhub-input-email';\n    const label = this.props.label || 'Email Address';\n    const name = this.props.name || 'buidlhub-input-email';\n    const {\n      EmailInput,\n      Label\n    } = this.components;\n    return (0, _core.jsx)(_react.default.Fragment, null, (0, _core.jsx)(Label, {\n      address: address,\n      name: name\n    }, label), (0, _core.jsx)(EmailInput, {\n      id: name,\n      name: name,\n      placeholder: this.translation.placeholder,\n      type: \"email\",\n      required: true,\n      value: this.state.emailAddress,\n      className: className,\n      onChange: this.handleEmailInputChange,\n      ref: elem => this.emailInputElem = elem\n    }));\n  }\n\n}\n\nexports.default = EmailComponent;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _core = require(\"@emotion/core\");\n\nvar _styled = _interopRequireDefault(require(\"@emotion/styled\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n        width: 40px;\\n        height: 40px;\\n        background-color: #333;\\n        margin: 10px;\\n        animation: sk-rotateplane 1.2s infinite ease-in-out;\\n        @keyframes sk-rotateplane {\\n          0% { \\n            transform: perspective(120px) rotateX(0deg) rotateY(0deg);\\n          } 50% { \\n            transform: perspective(120px) rotateX(-180.1deg) rotateY(0deg);\\n          } 100% { \\n            transform: perspective(120px) rotateX(-180deg) rotateY(-179.9deg);\\n          }\\n        }\\n        \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nclass LoadingComponent extends _react.default.PureComponent {\n  render() {\n    const DefaultSpinner = (0, _styled.default)('div')(_templateObject());\n    return (0, _core.jsx)(\"div\", null, (0, _core.jsx)(DefaultSpinner, null), this.props.message);\n  }\n\n}\n\nexports.default = LoadingComponent;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"BuidlhubEnsClient\", {\n  enumerable: true,\n  get: function get() {\n    return _BuidlhubEnsClient.default;\n  }\n});\nObject.defineProperty(exports, \"EmailComponent\", {\n  enumerable: true,\n  get: function get() {\n    return _EmailComponent.default;\n  }\n});\n\nvar _BuidlhubEnsClient = _interopRequireDefault(require(\"./BuidlhubEnsClient\"));\n\nvar _EmailComponent = _interopRequireDefault(require(\"./components/Email/EmailComponent\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","import styled from '@emotion/styled-base';\n\nvar tags = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr', // SVG\n'circle', 'clipPath', 'defs', 'ellipse', 'foreignObject', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];\n\nvar newStyled = styled.bind();\ntags.forEach(function (tagName) {\n  newStyled[tagName] = newStyled(tagName);\n});\n\nexport default newStyled;\n",";(function (globalScope) {\r\n  'use strict';\r\n\r\n\r\n  /*\r\n   *  decimal.js v10.3.1\r\n   *  An arbitrary-precision Decimal type for JavaScript.\r\n   *  https://github.com/MikeMcl/decimal.js\r\n   *  Copyright (c) 2021 Michael Mclaughlin <M8ch88l@gmail.com>\r\n   *  MIT Licence\r\n   */\r\n\r\n\r\n  // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n    // The maximum exponent magnitude.\r\n    // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.\r\n  var EXP_LIMIT = 9e15,                      // 0 to 9e15\r\n\r\n    // The limit on the value of `precision`, and on the value of the first argument to\r\n    // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n    MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n    // Base conversion alphabet.\r\n    NUMERALS = '0123456789abcdef',\r\n\r\n    // The natural logarithm of 10 (1025 digits).\r\n    LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',\r\n\r\n    // Pi (1025 digits).\r\n    PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',\r\n\r\n\r\n    // The initial configuration properties of the Decimal constructor.\r\n    DEFAULTS = {\r\n\r\n      // These values must be integers within the stated ranges (inclusive).\r\n      // Most of these values can be changed at run-time using the `Decimal.config` method.\r\n\r\n      // The maximum number of significant digits of the result of a calculation or base conversion.\r\n      // E.g. `Decimal.config({ precision: 20 });`\r\n      precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n      // The rounding mode used when rounding to `precision`.\r\n      //\r\n      // ROUND_UP         0 Away from zero.\r\n      // ROUND_DOWN       1 Towards zero.\r\n      // ROUND_CEIL       2 Towards +Infinity.\r\n      // ROUND_FLOOR      3 Towards -Infinity.\r\n      // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      //\r\n      // E.g.\r\n      // `Decimal.rounding = 4;`\r\n      // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n      rounding: 4,                           // 0 to 8\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP         0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).\r\n      // FLOOR      3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN  6 The IEEE 754 remainder function.\r\n      // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.\r\n      //\r\n      // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian\r\n      // division (9) are commonly used for the modulus operation. The other rounding modes can also\r\n      // be used, but they may not give useful results.\r\n      modulo: 1,                             // 0 to 9\r\n\r\n      // The exponent value at and beneath which `toString` returns exponential notation.\r\n      // JavaScript numbers: -7\r\n      toExpNeg: -7,                          // 0 to -EXP_LIMIT\r\n\r\n      // The exponent value at and above which `toString` returns exponential notation.\r\n      // JavaScript numbers: 21\r\n      toExpPos:  21,                         // 0 to EXP_LIMIT\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // JavaScript numbers: -324  (5e-324)\r\n      minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // JavaScript numbers: 308  (1.7976931348623157e+308)\r\n      maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      crypto: false                          // true/false\r\n    },\r\n\r\n\r\n  // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n    Decimal, inexact, noConflict, quadrant,\r\n    external = true,\r\n\r\n    decimalError = '[DecimalError] ',\r\n    invalidArgument = decimalError + 'Invalid argument: ',\r\n    precisionLimitExceeded = decimalError + 'Precision limit exceeded',\r\n    cryptoUnavailable = decimalError + 'crypto unavailable',\r\n    tag = '[object Decimal]',\r\n\r\n    mathfloor = Math.floor,\r\n    mathpow = Math.pow,\r\n\r\n    isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\r\n    isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\r\n    isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\r\n    isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n    BASE = 1e7,\r\n    LOG_BASE = 7,\r\n    MAX_SAFE_INTEGER = 9007199254740991,\r\n\r\n    LN10_PRECISION = LN10.length - 1,\r\n    PI_PRECISION = PI.length - 1,\r\n\r\n    // Decimal.prototype object\r\n    P = { toStringTag: tag };\r\n\r\n\r\n  // Decimal prototype methods\r\n\r\n\r\n  /*\r\n   *  absoluteValue             abs\r\n   *  ceil\r\n   *  clampedTo                 clamp\r\n   *  comparedTo                cmp\r\n   *  cosine                    cos\r\n   *  cubeRoot                  cbrt\r\n   *  decimalPlaces             dp\r\n   *  dividedBy                 div\r\n   *  dividedToIntegerBy        divToInt\r\n   *  equals                    eq\r\n   *  floor\r\n   *  greaterThan               gt\r\n   *  greaterThanOrEqualTo      gte\r\n   *  hyperbolicCosine          cosh\r\n   *  hyperbolicSine            sinh\r\n   *  hyperbolicTangent         tanh\r\n   *  inverseCosine             acos\r\n   *  inverseHyperbolicCosine   acosh\r\n   *  inverseHyperbolicSine     asinh\r\n   *  inverseHyperbolicTangent  atanh\r\n   *  inverseSine               asin\r\n   *  inverseTangent            atan\r\n   *  isFinite\r\n   *  isInteger                 isInt\r\n   *  isNaN\r\n   *  isNegative                isNeg\r\n   *  isPositive                isPos\r\n   *  isZero\r\n   *  lessThan                  lt\r\n   *  lessThanOrEqualTo         lte\r\n   *  logarithm                 log\r\n   *  [maximum]                 [max]\r\n   *  [minimum]                 [min]\r\n   *  minus                     sub\r\n   *  modulo                    mod\r\n   *  naturalExponential        exp\r\n   *  naturalLogarithm          ln\r\n   *  negated                   neg\r\n   *  plus                      add\r\n   *  precision                 sd\r\n   *  round\r\n   *  sine                      sin\r\n   *  squareRoot                sqrt\r\n   *  tangent                   tan\r\n   *  times                     mul\r\n   *  toBinary\r\n   *  toDecimalPlaces           toDP\r\n   *  toExponential\r\n   *  toFixed\r\n   *  toFraction\r\n   *  toHexadecimal             toHex\r\n   *  toNearest\r\n   *  toNumber\r\n   *  toOctal\r\n   *  toPower                   pow\r\n   *  toPrecision\r\n   *  toSignificantDigits       toSD\r\n   *  toString\r\n   *  truncated                 trunc\r\n   *  valueOf                   toJSON\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of this Decimal.\r\n   *\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of positive Infinity.\r\n   *\r\n   */\r\n  P.ceil = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal clamped to the range\r\n   * delineated by `min` and `max`.\r\n   *\r\n   * min {number|string|Decimal}\r\n   * max {number|string|Decimal}\r\n   *\r\n   */\r\n  P.clampedTo = P.clamp = function (min, max) {\r\n    var k,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n    min = new Ctor(min);\r\n    max = new Ctor(max);\r\n    if (!min.s || !max.s) return new Ctor(NaN);\r\n    if (min.gt(max)) throw Error(invalidArgument + max);\r\n    k = x.cmp(min);\r\n    return k < 0 ? min : x.cmp(max) > 0 ? max : new Ctor(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if the value of this Decimal is greater than the value of `y`,\r\n   *  -1    if the value of this Decimal is less than the value of `y`,\r\n   *   0    if they have the same value,\r\n   *   NaN  if the value of either Decimal is NaN.\r\n   *\r\n   */\r\n  P.comparedTo = P.cmp = function (y) {\r\n    var i, j, xdL, ydL,\r\n      x = this,\r\n      xd = x.d,\r\n      yd = (y = new x.constructor(y)).d,\r\n      xs = x.s,\r\n      ys = y.s;\r\n\r\n    // Either NaN or ±Infinity?\r\n    if (!xd || !yd) {\r\n      return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Either zero?\r\n    if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\r\n\r\n    // Signs differ?\r\n    if (xs !== ys) return xs;\r\n\r\n    // Compare exponents.\r\n    if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\r\n\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n      if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * cos(0)         = 1\r\n   * cos(-0)        = 1\r\n   * cos(Infinity)  = NaN\r\n   * cos(-Infinity) = NaN\r\n   * cos(NaN)       = NaN\r\n   *\r\n   */\r\n  P.cosine = P.cos = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.d) return new Ctor(NaN);\r\n\r\n    // cos(0) = cos(-0) = 1\r\n    if (!x.d[0]) return new Ctor(1);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *\r\n   * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   *  cbrt(0)  =  0\r\n   *  cbrt(-0) = -0\r\n   *  cbrt(1)  =  1\r\n   *  cbrt(-1) = -1\r\n   *  cbrt(N)  =  N\r\n   *  cbrt(-I) = -I\r\n   *  cbrt(I)  =  I\r\n   *\r\n   * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))\r\n   *\r\n   */\r\n  P.cubeRoot = P.cbrt = function () {\r\n    var e, m, n, r, rep, s, sd, t, t3, t3plusx,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = x.s * mathpow(x.s * x, 1 / 3);\r\n\r\n     // Math.cbrt underflow/overflow?\r\n     // Pass x to Math.pow as integer, then adjust the exponent of the result.\r\n    if (!s || Math.abs(s) == 1 / 0) {\r\n      n = digitsToString(x.d);\r\n      e = x.e;\r\n\r\n      // Adjust n exponent so it is a multiple of 3 away from x exponent.\r\n      if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');\r\n      s = mathpow(n, 1 / 3);\r\n\r\n      // Rarely, e may be one less than the result exponent value.\r\n      e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n      r.s = x.s;\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Halley's method.\r\n    // TODO? Compare Newton's method.\r\n    for (;;) {\r\n      t = r;\r\n      t3 = t.times(t).times(t);\r\n      t3plusx = t3.plus(x);\r\n      r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999\r\n        // , i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of decimal places of the value of this Decimal.\r\n   *\r\n   */\r\n  P.decimalPlaces = P.dp = function () {\r\n    var w,\r\n      d = this.d,\r\n      n = NaN;\r\n\r\n    if (d) {\r\n      w = d.length - 1;\r\n      n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      w = d[w];\r\n      if (w) for (; w % 10 == 0; w /= 10) n--;\r\n      if (n < 0) n = 0;\r\n    }\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedBy = P.div = function (y) {\r\n    return divide(this, new this.constructor(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n   * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedToIntegerBy = P.divToInt = function (y) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.equals = P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of negative Infinity.\r\n   *\r\n   */\r\n  P.floor = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 3);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n   * false.\r\n   *\r\n   */\r\n  P.greaterThan = P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  P.greaterThanOrEqualTo = P.gte = function (y) {\r\n    var k = this.cmp(y);\r\n    return k == 1 || k === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [1, Infinity]\r\n   *\r\n   * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...\r\n   *\r\n   * cosh(0)         = 1\r\n   * cosh(-0)        = 1\r\n   * cosh(Infinity)  = Infinity\r\n   * cosh(-Infinity) = Infinity\r\n   * cosh(NaN)       = NaN\r\n   *\r\n   *  x        time taken (ms)   result\r\n   * 1000      9                 9.8503555700852349694e+433\r\n   * 10000     25                4.4034091128314607936e+4342\r\n   * 100000    171               1.4033316802130615897e+43429\r\n   * 1000000   3817              1.5166076984010437725e+434294\r\n   * 10000000  abandoned after 2 minute wait\r\n   *\r\n   * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicCosine = P.cosh = function () {\r\n    var k, n, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      one = new Ctor(1);\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\r\n    if (x.isZero()) return one;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1\r\n    // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    // TODO? Estimation reused from cosine() and may not be optimal here.\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      n = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      n = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\r\n\r\n    // Reverse argument reduction\r\n    var cosh2_x,\r\n      i = k,\r\n      d8 = new Ctor(8);\r\n    for (; i--;) {\r\n      cosh2_x = x.times(x);\r\n      x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\r\n    }\r\n\r\n    return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...\r\n   *\r\n   * sinh(0)         = 0\r\n   * sinh(-0)        = -0\r\n   * sinh(Infinity)  = Infinity\r\n   * sinh(-Infinity) = -Infinity\r\n   * sinh(NaN)       = NaN\r\n   *\r\n   * x        time taken (ms)\r\n   * 10       2 ms\r\n   * 100      5 ms\r\n   * 1000     14 ms\r\n   * 10000    82 ms\r\n   * 100000   886 ms            1.4033316802130615897e+43429\r\n   * 200000   2613 ms\r\n   * 300000   5407 ms\r\n   * 400000   8824 ms\r\n   * 500000   13026 ms          8.7080643612718084129e+217146\r\n   * 1000000  48543 ms\r\n   *\r\n   * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicSine = P.sinh = function () {\r\n    var k, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    if (len < 3) {\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n    } else {\r\n\r\n      // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))\r\n      // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))\r\n      // 3 multiplications and 1 addition\r\n\r\n      // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))\r\n      // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))\r\n      // 4 multiplications and 2 additions\r\n\r\n      // Estimate the optimum number of times to use the argument reduction.\r\n      k = 1.4 * Math.sqrt(len);\r\n      k = k > 16 ? 16 : k | 0;\r\n\r\n      x = x.times(1 / tinyPow(5, k));\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n\r\n      // Reverse argument reduction\r\n      var sinh2_x,\r\n        d5 = new Ctor(5),\r\n        d16 = new Ctor(16),\r\n        d20 = new Ctor(20);\r\n      for (; k--;) {\r\n        sinh2_x = x.times(x);\r\n        x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\r\n      }\r\n    }\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * tanh(x) = sinh(x) / cosh(x)\r\n   *\r\n   * tanh(0)         = 0\r\n   * tanh(-0)        = -0\r\n   * tanh(Infinity)  = 1\r\n   * tanh(-Infinity) = -1\r\n   * tanh(NaN)       = NaN\r\n   *\r\n   */\r\n  P.hyperbolicTangent = P.tanh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 7;\r\n    Ctor.rounding = 1;\r\n\r\n    return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of\r\n   * this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [0, pi]\r\n   *\r\n   * acos(x) = pi/2 - asin(x)\r\n   *\r\n   * acos(0)       = pi/2\r\n   * acos(-0)      = pi/2\r\n   * acos(1)       = 0\r\n   * acos(-1)      = pi\r\n   * acos(1/2)     = pi/3\r\n   * acos(-1/2)    = 2*pi/3\r\n   * acos(|x| > 1) = NaN\r\n   * acos(NaN)     = NaN\r\n   *\r\n   */\r\n  P.inverseCosine = P.acos = function () {\r\n    var halfPi,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      k = x.abs().cmp(1),\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n      return k === 0\r\n        // |x| is 1\r\n        ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)\r\n        // |x| > 1 or x is NaN\r\n        : new Ctor(NaN);\r\n    }\r\n\r\n    if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.asin();\r\n    halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return halfPi.minus(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [1, Infinity]\r\n   * Range: [0, Infinity]\r\n   *\r\n   * acosh(x) = ln(x + sqrt(x^2 - 1))\r\n   *\r\n   * acosh(x < 1)     = NaN\r\n   * acosh(NaN)       = NaN\r\n   * acosh(Infinity)  = Infinity\r\n   * acosh(-Infinity) = NaN\r\n   * acosh(0)         = NaN\r\n   * acosh(-0)        = NaN\r\n   * acosh(1)         = 0\r\n   * acosh(-1)        = NaN\r\n   *\r\n   */\r\n  P.inverseHyperbolicCosine = P.acosh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\r\n    if (!x.isFinite()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).minus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * asinh(x) = ln(x + sqrt(x^2 + 1))\r\n   *\r\n   * asinh(NaN)       = NaN\r\n   * asinh(Infinity)  = Infinity\r\n   * asinh(-Infinity) = -Infinity\r\n   * asinh(0)         = 0\r\n   * asinh(-0)        = -0\r\n   *\r\n   */\r\n  P.inverseHyperbolicSine = P.asinh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).plus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * atanh(x) = 0.5 * ln((1 + x) / (1 - x))\r\n   *\r\n   * atanh(|x| > 1)   = NaN\r\n   * atanh(NaN)       = NaN\r\n   * atanh(Infinity)  = NaN\r\n   * atanh(-Infinity) = NaN\r\n   * atanh(0)         = 0\r\n   * atanh(-0)        = -0\r\n   * atanh(1)         = Infinity\r\n   * atanh(-1)        = -Infinity\r\n   *\r\n   */\r\n  P.inverseHyperbolicTangent = P.atanh = function () {\r\n    var pr, rm, wpr, xsd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    xsd = x.sd();\r\n\r\n    if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\r\n\r\n    Ctor.precision = wpr = xsd - x.e;\r\n\r\n    x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\r\n\r\n    Ctor.precision = pr + 4;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.ln();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(0.5);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))\r\n   *\r\n   * asin(0)       = 0\r\n   * asin(-0)      = -0\r\n   * asin(1/2)     = pi/6\r\n   * asin(-1/2)    = -pi/6\r\n   * asin(1)       = pi/2\r\n   * asin(-1)      = -pi/2\r\n   * asin(|x| > 1) = NaN\r\n   * asin(NaN)     = NaN\r\n   *\r\n   * TODO? Compare performance of Taylor series.\r\n   *\r\n   */\r\n  P.inverseSine = P.asin = function () {\r\n    var halfPi, k,\r\n      pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    k = x.abs().cmp(1);\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n\r\n      // |x| is 1\r\n      if (k === 0) {\r\n        halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        halfPi.s = x.s;\r\n        return halfPi;\r\n      }\r\n\r\n      // |x| > 1 or x is NaN\r\n      return new Ctor(NaN);\r\n    }\r\n\r\n    // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n   *\r\n   * atan(0)         = 0\r\n   * atan(-0)        = -0\r\n   * atan(1)         = pi/4\r\n   * atan(-1)        = -pi/4\r\n   * atan(Infinity)  = pi/2\r\n   * atan(-Infinity) = -pi/2\r\n   * atan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.inverseTangent = P.atan = function () {\r\n    var i, j, k, n, px, t, r, wpr, x2,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (!x.isFinite()) {\r\n      if (!x.s) return new Ctor(NaN);\r\n      if (pr + 4 <= PI_PRECISION) {\r\n        r = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        r.s = x.s;\r\n        return r;\r\n      }\r\n    } else if (x.isZero()) {\r\n      return new Ctor(x);\r\n    } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\r\n      r = getPi(Ctor, pr + 4, rm).times(0.25);\r\n      r.s = x.s;\r\n      return r;\r\n    }\r\n\r\n    Ctor.precision = wpr = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);\r\n\r\n    // Argument reduction\r\n    // Ensure |x| < 0.42\r\n    // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))\r\n\r\n    k = Math.min(28, wpr / LOG_BASE + 2 | 0);\r\n\r\n    for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\r\n\r\n    external = false;\r\n\r\n    j = Math.ceil(wpr / LOG_BASE);\r\n    n = 1;\r\n    x2 = x.times(x);\r\n    r = new Ctor(x);\r\n    px = x;\r\n\r\n    // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n    for (; i !== -1;) {\r\n      px = px.times(x2);\r\n      t = r.minus(px.div(n += 2));\r\n\r\n      px = px.times(x2);\r\n      r = t.plus(px.div(n += 2));\r\n\r\n      if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\r\n    }\r\n\r\n    if (k) r = r.times(2 << (k - 1));\r\n\r\n    external = true;\r\n\r\n    return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is a finite number, otherwise return false.\r\n   *\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.d;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is an integer, otherwise return false.\r\n   *\r\n   */\r\n  P.isInteger = P.isInt = function () {\r\n    return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is NaN, otherwise return false.\r\n   *\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is negative, otherwise return false.\r\n   *\r\n   */\r\n  P.isNegative = P.isNeg = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is positive, otherwise return false.\r\n   *\r\n   */\r\n  P.isPositive = P.isPos = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is 0 or -0, otherwise return false.\r\n   *\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.d && this.d[0] === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThan = P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThanOrEqualTo = P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * If no base is specified, return log[10](arg).\r\n   *\r\n   * log[base](arg) = ln(arg) / ln(base)\r\n   *\r\n   * The result will always be correctly rounded if the base of the log is 10, and 'almost always'\r\n   * otherwise:\r\n   *\r\n   * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\r\n   * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\r\n   * between the result and the correctly rounded result will be one ulp (unit in the last place).\r\n   *\r\n   * log[-b](a)       = NaN\r\n   * log[0](a)        = NaN\r\n   * log[1](a)        = NaN\r\n   * log[NaN](a)      = NaN\r\n   * log[Infinity](a) = NaN\r\n   * log[b](0)        = -Infinity\r\n   * log[b](-0)       = -Infinity\r\n   * log[b](-a)       = NaN\r\n   * log[b](1)        = 0\r\n   * log[b](Infinity) = Infinity\r\n   * log[b](NaN)      = NaN\r\n   *\r\n   * [base] {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  P.logarithm = P.log = function (base) {\r\n    var isBase10, d, denominator, k, inf, num, sd, r,\r\n      arg = this,\r\n      Ctor = arg.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding,\r\n      guard = 5;\r\n\r\n    // Default base is 10.\r\n    if (base == null) {\r\n      base = new Ctor(10);\r\n      isBase10 = true;\r\n    } else {\r\n      base = new Ctor(base);\r\n      d = base.d;\r\n\r\n      // Return NaN if base is negative, or non-finite, or is 0 or 1.\r\n      if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\r\n\r\n      isBase10 = base.eq(10);\r\n    }\r\n\r\n    d = arg.d;\r\n\r\n    // Is arg negative, non-finite, 0 or 1?\r\n    if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\r\n      return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\r\n    }\r\n\r\n    // The result will have a non-terminating decimal expansion if base is 10 and arg is not an\r\n    // integer power of 10.\r\n    if (isBase10) {\r\n      if (d.length > 1) {\r\n        inf = true;\r\n      } else {\r\n        for (k = d[0]; k % 10 === 0;) k /= 10;\r\n        inf = k !== 1;\r\n      }\r\n    }\r\n\r\n    external = false;\r\n    sd = pr + guard;\r\n    num = naturalLogarithm(arg, sd);\r\n    denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n\r\n    // The result will have 5 rounding digits.\r\n    r = divide(num, denominator, sd, 1);\r\n\r\n    // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\r\n    // calculate 10 further digits.\r\n    //\r\n    // If the result is known to have an infinite decimal expansion, repeat this until it is clear\r\n    // that the result is above or below the boundary. Otherwise, if after calculating the 10\r\n    // further digits, the last 14 are nines, round up and assume the result is exact.\r\n    // Also assume the result is exact if the last 14 are zero.\r\n    //\r\n    // Example of a result that will be incorrectly rounded:\r\n    // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\r\n    // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it\r\n    // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so\r\n    // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal\r\n    // place is still 2.6.\r\n    if (checkRoundingDigits(r.d, k = pr, rm)) {\r\n\r\n      do {\r\n        sd += 10;\r\n        num = naturalLogarithm(arg, sd);\r\n        denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n        r = divide(num, denominator, sd, 1);\r\n\r\n        if (!inf) {\r\n\r\n          // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\r\n          if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\r\n            r = finalise(r, pr + 1, 0);\r\n          }\r\n\r\n          break;\r\n        }\r\n      } while (checkRoundingDigits(r.d, k += 10, rm));\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.max = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'lt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.min = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'gt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return y negated if x is finite and y is ±Infinity.\r\n      else if (x.d) y.s = -y.s;\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with different signs.\r\n      // Return NaN if both are ±Infinity with the same sign.\r\n      else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n    // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.plus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return y negated if x is zero and y is non-zero.\r\n      if (yd[0]) y.s = -y.s;\r\n\r\n      // Return x if y is zero and x is non-zero.\r\n      else if (xd[0]) y = new Ctor(x);\r\n\r\n      // Return zero if both are zero.\r\n      // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.\r\n      else return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    e = mathfloor(y.e / LOG_BASE);\r\n    xe = mathfloor(x.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    k = xe - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (k) {\r\n      xLTy = k < 0;\r\n\r\n      if (xLTy) {\r\n        d = xd;\r\n        k = -k;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = xe;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Numbers with massively different exponents would result in a very high number of\r\n      // zeros needing to be prepended, but this can be avoided while still ensuring correct\r\n      // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n      if (k > i) {\r\n        k = i;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      d.reverse();\r\n      for (i = k; i--;) d.push(0);\r\n      d.reverse();\r\n\r\n    // Base 1e7 exponents equal.\r\n    } else {\r\n\r\n      // Check digits to determine which is the bigger number.\r\n\r\n      i = xd.length;\r\n      len = yd.length;\r\n      xLTy = i < len;\r\n      if (xLTy) len = i;\r\n\r\n      for (i = 0; i < len; i++) {\r\n        if (xd[i] != yd[i]) {\r\n          xLTy = xd[i] < yd[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      k = 0;\r\n    }\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      xd = yd;\r\n      yd = d;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    len = xd.length;\r\n\r\n    // Append zeros to `xd` if shorter.\r\n    // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.\r\n    for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n    // Subtract yd from xd.\r\n    for (i = yd.length; i > k;) {\r\n\r\n      if (xd[--i] < yd[i]) {\r\n        for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n        --xd[j];\r\n        xd[i] += BASE;\r\n      }\r\n\r\n      xd[i] -= yd[i];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] === 0;) xd.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n    // Zero?\r\n    if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * The result depends on the modulo mode.\r\n   *\r\n   */\r\n  P.modulo = P.mod = function (y) {\r\n    var q,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // Return NaN if x is ±Infinity or NaN, or y is NaN or ±0.\r\n    if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\r\n\r\n    // Return x if y is ±Infinity or x is ±0.\r\n    if (!y.d || x.d && !x.d[0]) {\r\n      return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\r\n    }\r\n\r\n    // Prevent rounding of intermediate calculations.\r\n    external = false;\r\n\r\n    if (Ctor.modulo == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // result = x - q * y    where  0 <= result < abs(y)\r\n      q = divide(x, y.abs(), 0, 3, 1);\r\n      q.s *= y.s;\r\n    } else {\r\n      q = divide(x, y, 0, Ctor.modulo, 1);\r\n    }\r\n\r\n    q = q.times(y);\r\n\r\n    external = true;\r\n\r\n    return x.minus(q);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n   * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalExponential = P.exp = function () {\r\n    return naturalExponential(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalLogarithm = P.ln = function () {\r\n    return naturalLogarithm(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n   * -1.\r\n   *\r\n   */\r\n  P.negated = P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var carry, d, e, i, k, len, pr, rm, xd, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with the same sign.\r\n      // Return NaN if both are ±Infinity with different signs.\r\n      // Return y if x is finite and y is ±Infinity.\r\n      else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n     // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return x if y is zero.\r\n      // Return y if y is non-zero.\r\n      if (!yd[0]) y = new Ctor(x);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    k = mathfloor(x.e / LOG_BASE);\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    i = k - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (i) {\r\n\r\n      if (i < 0) {\r\n        d = xd;\r\n        i = -i;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = k;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n      k = Math.ceil(pr / LOG_BASE);\r\n      len = k > len ? k + 1 : len + 1;\r\n\r\n      if (i > len) {\r\n        i = len;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n      d.reverse();\r\n      for (; i--;) d.push(0);\r\n      d.reverse();\r\n    }\r\n\r\n    len = xd.length;\r\n    i = yd.length;\r\n\r\n    // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n    if (len - i < 0) {\r\n      i = len;\r\n      d = yd;\r\n      yd = xd;\r\n      xd = d;\r\n    }\r\n\r\n    // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n    for (carry = 0; i;) {\r\n      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n      xd[i] %= BASE;\r\n    }\r\n\r\n    if (carry) {\r\n      xd.unshift(carry);\r\n      ++e;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of significant digits of the value of this Decimal.\r\n   *\r\n   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n   *\r\n   */\r\n  P.precision = P.sd = function (z) {\r\n    var k,\r\n      x = this;\r\n\r\n    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n    if (x.d) {\r\n      k = getPrecision(x.d);\r\n      if (z && x.e + 1 > k) k = x.e + 1;\r\n    } else {\r\n      k = NaN;\r\n    }\r\n\r\n    return k;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n   * rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.round = function () {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   *\r\n   * sin(0)         = 0\r\n   * sin(-0)        = -0\r\n   * sin(Infinity)  = NaN\r\n   * sin(-Infinity) = NaN\r\n   * sin(NaN)       = NaN\r\n   *\r\n   */\r\n  P.sine = P.sin = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = sine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N)  =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I)  =  I\r\n   *  sqrt(0)  =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, sd, r, rep, t,\r\n      x = this,\r\n      d = x.d,\r\n      e = x.e,\r\n      s = x.s,\r\n      Ctor = x.constructor;\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !d || !d[0]) {\r\n      return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\r\n    }\r\n\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+x);\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = digitsToString(d);\r\n\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(n);\r\n      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Newton-Raphson iteration.\r\n    for (;;) {\r\n      t = r;\r\n      r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n        // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * tan(0)         = 0\r\n   * tan(-0)        = -0\r\n   * tan(Infinity)  = NaN\r\n   * tan(-Infinity) = NaN\r\n   * tan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.tangent = P.tan = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.sin();\r\n    x.s = 1;\r\n    x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var carry, e, i, k, r, rL, t, xdL, ydL,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      xd = x.d,\r\n      yd = (y = new Ctor(y)).d;\r\n\r\n    y.s *= x.s;\r\n\r\n     // If either is NaN, ±Infinity or ±0...\r\n    if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n      return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd\r\n\r\n        // Return NaN if either is NaN.\r\n        // Return NaN if x is ±0 and y is ±Infinity, or y is ±0 and x is ±Infinity.\r\n        ? NaN\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        // Return ±0 if either is ±0.\r\n        : !xd || !yd ? y.s / 0 : y.s * 0);\r\n    }\r\n\r\n    e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Ensure xd points to the longer array.\r\n    if (xdL < ydL) {\r\n      r = xd;\r\n      xd = yd;\r\n      yd = r;\r\n      rL = xdL;\r\n      xdL = ydL;\r\n      ydL = rL;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    r = [];\r\n    rL = xdL + ydL;\r\n    for (i = rL; i--;) r.push(0);\r\n\r\n    // Multiply!\r\n    for (i = ydL; --i >= 0;) {\r\n      carry = 0;\r\n      for (k = xdL + i; k > i;) {\r\n        t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n        r[k--] = t % BASE | 0;\r\n        carry = t / BASE | 0;\r\n      }\r\n\r\n      r[k] = (r[k] + carry) % BASE | 0;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; !r[--rL];) r.pop();\r\n\r\n    if (carry) ++e;\r\n    else r.shift();\r\n\r\n    y.d = r;\r\n    y.e = getBase10Exponent(r, e);\r\n\r\n    return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 2, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toBinary = function (sd, rm) {\r\n    return toStringBinary(this, 2, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n   *\r\n   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toDecimalPlaces = P.toDP = function (dp, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n    if (dp === void 0) return x;\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    return finalise(x, dp + x.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in exponential notation rounded to\r\n   * `dp` fixed decimal places using rounding mode `rounding`.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x, true);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), dp + 1, rm);\r\n      str = finiteToString(x, true, dp + 1);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n   * omitted.\r\n   *\r\n   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   * (-0).toFixed(3) is '0.000'.\r\n   * (-0.5).toFixed(0) is '-0'.\r\n   *\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var str, y,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      y = finalise(new Ctor(x), dp + x.e + 1, rm);\r\n      str = finiteToString(y, false, dp + y.e + 1);\r\n    }\r\n\r\n    // To determine whether to add the minus sign look at the value before it was rounded,\r\n    // i.e. look at `x` rather than `y`.\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array representing the value of this Decimal as a simple fraction with an integer\r\n   * numerator and an integer denominator.\r\n   *\r\n   * The denominator will be a positive non-zero value less than or equal to the specified maximum\r\n   * denominator. If a maximum denominator is not specified, the denominator will be the lowest\r\n   * value necessary to represent the number exactly.\r\n   *\r\n   * [maxD] {number|string|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\r\n   *\r\n   */\r\n  P.toFraction = function (maxD) {\r\n    var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,\r\n      x = this,\r\n      xd = x.d,\r\n      Ctor = x.constructor;\r\n\r\n    if (!xd) return new Ctor(x);\r\n\r\n    n1 = d0 = new Ctor(1);\r\n    d1 = n0 = new Ctor(0);\r\n\r\n    d = new Ctor(d1);\r\n    e = d.e = getPrecision(xd) - x.e - 1;\r\n    k = e % LOG_BASE;\r\n    d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\r\n\r\n    if (maxD == null) {\r\n\r\n      // d is 10**e, the minimum max-denominator needed.\r\n      maxD = e > 0 ? d : n1;\r\n    } else {\r\n      n = new Ctor(maxD);\r\n      if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\r\n      maxD = n.gt(d) ? (e > 0 ? d : n1) : n;\r\n    }\r\n\r\n    external = false;\r\n    n = new Ctor(digitsToString(xd));\r\n    pr = Ctor.precision;\r\n    Ctor.precision = e = xd.length * LOG_BASE * 2;\r\n\r\n    for (;;)  {\r\n      q = divide(n, d, 0, 1, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.cmp(maxD) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      d2 = n1;\r\n      n1 = n0.plus(q.times(d2));\r\n      n0 = d2;\r\n      d2 = d;\r\n      d = n.minus(q.times(d2));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1?\r\n    r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1\r\n        ? [n1, d1] : [n0, d0];\r\n\r\n    Ctor.precision = pr;\r\n    external = true;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 16, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toHexadecimal = P.toHex = function (sd, rm) {\r\n    return toStringBinary(this, 16, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal whose value is the nearest multiple of `y` in the direction of rounding\r\n   * mode `rm`, or `Decimal.rounding` if `rm` is omitted, to the value of this Decimal.\r\n   *\r\n   * The return value will always have the same sign as this Decimal, unless either this Decimal\r\n   * or `y` is NaN, in which case the return value will be also be NaN.\r\n   *\r\n   * The return value is not affected by the value of `precision`.\r\n   *\r\n   * y {number|string|Decimal} The magnitude to round to a multiple of.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toNearest() rounding mode not an integer: {rm}'\r\n   * 'toNearest() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toNearest = function (y, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (y == null) {\r\n\r\n      // If x is not finite, return x.\r\n      if (!x.d) return x;\r\n\r\n      y = new Ctor(1);\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      y = new Ctor(y);\r\n      if (rm === void 0) {\r\n        rm = Ctor.rounding;\r\n      } else {\r\n        checkInt32(rm, 0, 8);\r\n      }\r\n\r\n      // If x is not finite, return x if y is not NaN, else NaN.\r\n      if (!x.d) return y.s ? x : y;\r\n\r\n      // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.\r\n      if (!y.d) {\r\n        if (y.s) y.s = x.s;\r\n        return y;\r\n      }\r\n    }\r\n\r\n    // If y is not zero, calculate the nearest multiple of y to x.\r\n    if (y.d[0]) {\r\n      external = false;\r\n      x = divide(x, y, 0, rm, 1).times(y);\r\n      external = true;\r\n      finalise(x);\r\n\r\n    // If y is zero, return zero with the sign of x.\r\n    } else {\r\n      y.s = x.s;\r\n      x = y;\r\n    }\r\n\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Decimal converted to a number primitive.\r\n   * Zero keeps its sign.\r\n   *\r\n   */\r\n  P.toNumber = function () {\r\n    return +this;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 8, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toOctal = function (sd, rm) {\r\n    return toStringBinary(this, 8, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded\r\n   * to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * ECMAScript compliant.\r\n   *\r\n   *   pow(x, NaN)                           = NaN\r\n   *   pow(x, ±0)                            = 1\r\n\r\n   *   pow(NaN, non-zero)                    = NaN\r\n   *   pow(abs(x) > 1, +Infinity)            = +Infinity\r\n   *   pow(abs(x) > 1, -Infinity)            = +0\r\n   *   pow(abs(x) == 1, ±Infinity)           = NaN\r\n   *   pow(abs(x) < 1, +Infinity)            = +0\r\n   *   pow(abs(x) < 1, -Infinity)            = +Infinity\r\n   *   pow(+Infinity, y > 0)                 = +Infinity\r\n   *   pow(+Infinity, y < 0)                 = +0\r\n   *   pow(-Infinity, odd integer > 0)       = -Infinity\r\n   *   pow(-Infinity, even integer > 0)      = +Infinity\r\n   *   pow(-Infinity, odd integer < 0)       = -0\r\n   *   pow(-Infinity, even integer < 0)      = +0\r\n   *   pow(+0, y > 0)                        = +0\r\n   *   pow(+0, y < 0)                        = +Infinity\r\n   *   pow(-0, odd integer > 0)              = -0\r\n   *   pow(-0, even integer > 0)             = +0\r\n   *   pow(-0, odd integer < 0)              = -Infinity\r\n   *   pow(-0, even integer < 0)             = +Infinity\r\n   *   pow(finite x < 0, finite non-integer) = NaN\r\n   *\r\n   * For non-integer or very large exponents pow(x, y) is calculated using\r\n   *\r\n   *   x^y = exp(y*ln(x))\r\n   *\r\n   * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\r\n   * probability of an incorrectly rounded result\r\n   * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\r\n   * i.e. 1 in 250,000,000,000,000\r\n   *\r\n   * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\r\n   *\r\n   * y {number|string|Decimal} The power to which to raise this Decimal.\r\n   *\r\n   */\r\n  P.toPower = P.pow = function (y) {\r\n    var e, k, pr, r, rm, s,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      yn = +(y = new Ctor(y));\r\n\r\n    // Either ±Infinity, NaN or ±0?\r\n    if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (x.eq(1)) return x;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (y.eq(1)) return finalise(x, pr, rm);\r\n\r\n    // y exponent\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n    if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n      r = intPow(Ctor, x, k, pr);\r\n      return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\r\n    }\r\n\r\n    s = x.s;\r\n\r\n    // if x is negative\r\n    if (s < 0) {\r\n\r\n      // if y is not an integer\r\n      if (e < y.d.length - 1) return new Ctor(NaN);\r\n\r\n      // Result is positive if x is negative and the last digit of integer y is even.\r\n      if ((y.d[e] & 1) == 0) s = 1;\r\n\r\n      // if x.eq(-1)\r\n      if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\r\n        x.s = s;\r\n        return x;\r\n      }\r\n    }\r\n\r\n    // Estimate result exponent.\r\n    // x^y = 10^e,  where e = y * log10(x)\r\n    // log10(x) = log10(x_significand) + x_exponent\r\n    // log10(x_significand) = ln(x_significand) / ln(10)\r\n    k = mathpow(+x, yn);\r\n    e = k == 0 || !isFinite(k)\r\n      ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))\r\n      : new Ctor(k + '').e;\r\n\r\n    // Exponent estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.\r\n\r\n    // Overflow/underflow?\r\n    if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\r\n\r\n    external = false;\r\n    Ctor.rounding = x.s = 1;\r\n\r\n    // Estimate the extra guard digits needed to ensure five correct rounding digits from\r\n    // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):\r\n    // new Decimal(2.32456).pow('2087987436534566.46411')\r\n    // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\r\n    k = Math.min(12, (e + '').length);\r\n\r\n    // r = x^y = exp(y*ln(x))\r\n    r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\r\n\r\n    // r may be Infinity, e.g. (0.9999999999999999).pow(-1e+40)\r\n    if (r.d) {\r\n\r\n      // Truncate to the required precision plus five rounding digits.\r\n      r = finalise(r, pr + 5, 1);\r\n\r\n      // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate\r\n      // the result.\r\n      if (checkRoundingDigits(r.d, pr, rm)) {\r\n        e = pr + 10;\r\n\r\n        // Truncate to the increased precision plus five rounding digits.\r\n        r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\r\n\r\n        // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).\r\n        if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\r\n          r = finalise(r, pr + 1, 0);\r\n        }\r\n      }\r\n    }\r\n\r\n    r.s = s;\r\n    external = true;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), sd, rm);\r\n      str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n   * omitted.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toSD() digits out of range: {sd}'\r\n   * 'toSD() digits not an integer: {sd}'\r\n   * 'toSD() rounding mode not an integer: {rm}'\r\n   * 'toSD() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toSignificantDigits = P.toSD = function (sd, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    return finalise(new Ctor(x), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   *\r\n   * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n   *\r\n   */\r\n  P.toString = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\r\n   *\r\n   */\r\n  P.truncated = P.trunc = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   * Unlike `toString`, negative zero will include the minus sign.\r\n   *\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n  /*\r\n   *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toPower,\r\n   *                           finiteToString, naturalExponential, naturalLogarithm\r\n   *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,\r\n   *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random\r\n   *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm\r\n   *  convertBase              toStringBinary, parseOther\r\n   *  cos                      P.cos\r\n   *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,\r\n   *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,\r\n   *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,\r\n   *                           taylorSeries, atan2, parseOther\r\n   *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,\r\n   *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,\r\n   *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,\r\n   *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,\r\n   *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,\r\n   *                           P.truncated, divide, getLn10, getPi, naturalExponential,\r\n   *                           naturalLogarithm, ceil, floor, round, trunc\r\n   *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,\r\n   *                           toStringBinary\r\n   *  getBase10Exponent        P.minus, P.plus, P.times, parseOther\r\n   *  getLn10                  P.logarithm, naturalLogarithm\r\n   *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2\r\n   *  getPrecision             P.precision, P.toFraction\r\n   *  getZeroString            digitsToString, finiteToString\r\n   *  intPow                   P.toPower, parseOther\r\n   *  isOdd                    toLessThanHalfPi\r\n   *  maxOrMin                 max, min\r\n   *  naturalExponential       P.naturalExponential, P.toPower\r\n   *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,\r\n   *                           P.toPower, naturalExponential\r\n   *  nonFiniteToString        finiteToString, toStringBinary\r\n   *  parseDecimal             Decimal\r\n   *  parseOther               Decimal\r\n   *  sin                      P.sin\r\n   *  taylorSeries             P.cosh, P.sinh, cos, sin\r\n   *  toLessThanHalfPi         P.cos, P.sin\r\n   *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal\r\n   *  truncate                 intPow\r\n   *\r\n   *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,\r\n   *                           naturalLogarithm, config, parseOther, random, Decimal\r\n   */\r\n\r\n\r\n  function digitsToString(d) {\r\n    var i, k, ws,\r\n      indexOfLastWord = d.length - 1,\r\n      str = '',\r\n      w = d[0];\r\n\r\n    if (indexOfLastWord > 0) {\r\n      str += w;\r\n      for (i = 1; i < indexOfLastWord; i++) {\r\n        ws = d[i] + '';\r\n        k = LOG_BASE - ws.length;\r\n        if (k) str += getZeroString(k);\r\n        str += ws;\r\n      }\r\n\r\n      w = d[i];\r\n      ws = w + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n    } else if (w === 0) {\r\n      return '0';\r\n    }\r\n\r\n    // Remove trailing zeros of last w.\r\n    for (; w % 10 === 0;) w /= 10;\r\n\r\n    return str + w;\r\n  }\r\n\r\n\r\n  function checkInt32(i, min, max) {\r\n    if (i !== ~~i || i < min || i > max) {\r\n      throw Error(invalidArgument + i);\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Check 5 rounding digits if `repeating` is null, 4 otherwise.\r\n   * `repeating == null` if caller is `log` or `pow`,\r\n   * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.\r\n   */\r\n  function checkRoundingDigits(d, i, rm, repeating) {\r\n    var di, k, r, rd;\r\n\r\n    // Get the length of the first word of the array d.\r\n    for (k = d[0]; k >= 10; k /= 10) --i;\r\n\r\n    // Is the rounding digit in the first word of d?\r\n    if (--i < 0) {\r\n      i += LOG_BASE;\r\n      di = 0;\r\n    } else {\r\n      di = Math.ceil((i + 1) / LOG_BASE);\r\n      i %= LOG_BASE;\r\n    }\r\n\r\n    // i is the index (0 - 6) of the rounding digit.\r\n    // E.g. if within the word 3487563 the first rounding digit is 5,\r\n    // then i = 4, k = 1000, rd = 3487563 % 1000 = 563\r\n    k = mathpow(10, LOG_BASE - i);\r\n    rd = d[di] % k | 0;\r\n\r\n    if (repeating == null) {\r\n      if (i < 3) {\r\n        if (i == 0) rd = rd / 100 | 0;\r\n        else if (i == 1) rd = rd / 10 | 0;\r\n        r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\r\n      } else {\r\n        r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||\r\n            (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\r\n      }\r\n    } else {\r\n      if (i < 4) {\r\n        if (i == 0) rd = rd / 1000 | 0;\r\n        else if (i == 1) rd = rd / 100 | 0;\r\n        else if (i == 2) rd = rd / 10 | 0;\r\n        r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\r\n      } else {\r\n        r = ((repeating || rm < 4) && rd + 1 == k ||\r\n        (!repeating && rm > 3) && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  // Convert string of `baseIn` to an array of numbers of `baseOut`.\r\n  // Eg. convertBase('255', 10, 16) returns [15, 15].\r\n  // Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\n  function convertBase(str, baseIn, baseOut) {\r\n    var j,\r\n      arr = [0],\r\n      arrL,\r\n      i = 0,\r\n      strL = str.length;\r\n\r\n    for (; i < strL;) {\r\n      for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\r\n      arr[0] += NUMERALS.indexOf(str.charAt(i++));\r\n      for (j = 0; j < arr.length; j++) {\r\n        if (arr[j] > baseOut - 1) {\r\n          if (arr[j + 1] === void 0) arr[j + 1] = 0;\r\n          arr[j + 1] += arr[j] / baseOut | 0;\r\n          arr[j] %= baseOut;\r\n        }\r\n      }\r\n    }\r\n\r\n    return arr.reverse();\r\n  }\r\n\r\n\r\n  /*\r\n   * cos(x) = 1 - x^2/2! + x^4/4! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function cosine(Ctor, x) {\r\n    var k, len, y;\r\n\r\n    if (x.isZero()) return x;\r\n\r\n    // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1\r\n    // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    len = x.d.length;\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      y = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      y = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    Ctor.precision += k;\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\r\n\r\n    // Reverse argument reduction\r\n    for (var i = k; i--;) {\r\n      var cos2x = x.times(x);\r\n      x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\r\n    }\r\n\r\n    Ctor.precision -= k;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Perform division in the specified base.\r\n   */\r\n  var divide = (function () {\r\n\r\n    // Assumes non-zero x and k, and hence non-zero result.\r\n    function multiplyInteger(x, k, base) {\r\n      var temp,\r\n        carry = 0,\r\n        i = x.length;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        temp = x[i] * k + carry;\r\n        x[i] = temp % base | 0;\r\n        carry = temp / base | 0;\r\n      }\r\n\r\n      if (carry) x.unshift(carry);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, r;\r\n\r\n      if (aL != bL) {\r\n        r = aL > bL ? 1 : -1;\r\n      } else {\r\n        for (i = r = 0; i < aL; i++) {\r\n          if (a[i] != b[i]) {\r\n            r = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return r;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1;) a.shift();\r\n    }\r\n\r\n    return function (x, y, pr, rm, dp, base) {\r\n      var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,\r\n        yL, yz,\r\n        Ctor = x.constructor,\r\n        sign = x.s == y.s ? 1 : -1,\r\n        xd = x.d,\r\n        yd = y.d;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n        return new Ctor(// Return NaN if either NaN, or both Infinity or 0.\r\n          !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :\r\n\r\n          // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.\r\n          xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);\r\n      }\r\n\r\n      if (base) {\r\n        logBase = 1;\r\n        e = x.e - y.e;\r\n      } else {\r\n        base = BASE;\r\n        logBase = LOG_BASE;\r\n        e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\r\n      }\r\n\r\n      yL = yd.length;\r\n      xL = xd.length;\r\n      q = new Ctor(sign);\r\n      qd = q.d = [];\r\n\r\n      // Result exponent may be one less than e.\r\n      // The digit array of a Decimal from toStringBinary may have trailing zeros.\r\n      for (i = 0; yd[i] == (xd[i] || 0); i++);\r\n\r\n      if (yd[i] > (xd[i] || 0)) e--;\r\n\r\n      if (pr == null) {\r\n        sd = pr = Ctor.precision;\r\n        rm = Ctor.rounding;\r\n      } else if (dp) {\r\n        sd = pr + (x.e - y.e) + 1;\r\n      } else {\r\n        sd = pr;\r\n      }\r\n\r\n      if (sd < 0) {\r\n        qd.push(1);\r\n        more = true;\r\n      } else {\r\n\r\n        // Convert precision in number of base 10 digits to base 1e7 digits.\r\n        sd = sd / logBase + 2 | 0;\r\n        i = 0;\r\n\r\n        // divisor < 1e7\r\n        if (yL == 1) {\r\n          k = 0;\r\n          yd = yd[0];\r\n          sd++;\r\n\r\n          // k is the carry.\r\n          for (; (i < xL || k) && sd--; i++) {\r\n            t = k * base + (xd[i] || 0);\r\n            qd[i] = t / yd | 0;\r\n            k = t % yd | 0;\r\n          }\r\n\r\n          more = k || i < xL;\r\n\r\n        // divisor >= 1e7\r\n        } else {\r\n\r\n          // Normalise xd and yd so highest order digit of yd is >= base/2\r\n          k = base / (yd[0] + 1) | 0;\r\n\r\n          if (k > 1) {\r\n            yd = multiplyInteger(yd, k, base);\r\n            xd = multiplyInteger(xd, k, base);\r\n            yL = yd.length;\r\n            xL = xd.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xd.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL;) rem[remL++] = 0;\r\n\r\n          yz = yd.slice();\r\n          yz.unshift(0);\r\n          yd0 = yd[0];\r\n\r\n          if (yd[1] >= base / 2) ++yd0;\r\n\r\n          do {\r\n            k = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yd, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, k.\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // k will be how many times the divisor goes into the current remainder.\r\n              k = rem0 / yd0 | 0;\r\n\r\n              //  Algorithm:\r\n              //  1. product = divisor * trial digit (k)\r\n              //  2. if product > remainder: product -= divisor, k--\r\n              //  3. remainder -= product\r\n              //  4. if product was < remainder at 2:\r\n              //    5. compare new remainder and divisor\r\n              //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n              if (k > 1) {\r\n                if (k >= base) k = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiplyInteger(yd, k, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                cmp = compare(prod, rem, prodL, remL);\r\n\r\n                // product > remainder.\r\n                if (cmp == 1) {\r\n                  k--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yd, prodL, base);\r\n                }\r\n              } else {\r\n\r\n                // cmp is -1.\r\n                // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n                // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n                if (k == 0) cmp = k = 1;\r\n                prod = yd.slice();\r\n              }\r\n\r\n              prodL = prod.length;\r\n              if (prodL < remL) prod.unshift(0);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n\r\n              // If product was < previous remainder.\r\n              if (cmp == -1) {\r\n                remL = rem.length;\r\n\r\n                // Compare divisor and new remainder.\r\n                cmp = compare(yd, rem, yL, remL);\r\n\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                if (cmp < 1) {\r\n                  k++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yd, remL, base);\r\n                }\r\n              }\r\n\r\n              remL = rem.length;\r\n            } else if (cmp === 0) {\r\n              k++;\r\n              rem = [0];\r\n            }    // if cmp === 1, k will be 0\r\n\r\n            // Add the next digit, k, to the result array.\r\n            qd[i++] = k;\r\n\r\n            // Update the remainder.\r\n            if (cmp && rem[0]) {\r\n              rem[remL++] = xd[xi] || 0;\r\n            } else {\r\n              rem = [xd[xi]];\r\n              remL = 1;\r\n            }\r\n\r\n          } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n\r\n          more = rem[0] !== void 0;\r\n        }\r\n\r\n        // Leading zero?\r\n        if (!qd[0]) qd.shift();\r\n      }\r\n\r\n      // logBase is 1 when divide is being used for base conversion.\r\n      if (logBase == 1) {\r\n        q.e = e;\r\n        inexact = more;\r\n      } else {\r\n\r\n        // To calculate q.e, first get the number of digits of qd[0].\r\n        for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\r\n        q.e = i + e * logBase - 1;\r\n\r\n        finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round `x` to `sd` significant digits using rounding mode `rm`.\r\n   * Check for over/under-flow.\r\n   */\r\n   function finalise(x, sd, rm, isTruncated) {\r\n    var digits, i, j, k, rd, roundUp, w, xd, xdi,\r\n      Ctor = x.constructor;\r\n\r\n    // Don't round if sd is null or undefined.\r\n    out: if (sd != null) {\r\n      xd = x.d;\r\n\r\n      // Infinity/NaN.\r\n      if (!xd) return x;\r\n\r\n      // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // w: the word of xd containing rd, a base 1e7 number.\r\n      // xdi: the index of w within xd.\r\n      // digits: the number of digits of w.\r\n      // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n      // they had leading zeros)\r\n      // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n      // Get the length of the first word of the digits array xd.\r\n      for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\r\n      i = sd - digits;\r\n\r\n      // Is the rounding digit in the first word of xd?\r\n      if (i < 0) {\r\n        i += LOG_BASE;\r\n        j = sd;\r\n        w = xd[xdi = 0];\r\n\r\n        // Get the rounding digit at index j of w.\r\n        rd = w / mathpow(10, digits - j - 1) % 10 | 0;\r\n      } else {\r\n        xdi = Math.ceil((i + 1) / LOG_BASE);\r\n        k = xd.length;\r\n        if (xdi >= k) {\r\n          if (isTruncated) {\r\n\r\n            // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.\r\n            for (; k++ <= xdi;) xd.push(0);\r\n            w = rd = 0;\r\n            digits = 1;\r\n            i %= LOG_BASE;\r\n            j = i - LOG_BASE + 1;\r\n          } else {\r\n            break out;\r\n          }\r\n        } else {\r\n          w = k = xd[xdi];\r\n\r\n          // Get the number of digits of w.\r\n          for (digits = 1; k >= 10; k /= 10) digits++;\r\n\r\n          // Get the index of rd within w.\r\n          i %= LOG_BASE;\r\n\r\n          // Get the index of rd within w, adjusted for leading zeros.\r\n          // The number of leading zeros of w is given by LOG_BASE - digits.\r\n          j = i - LOG_BASE + digits;\r\n\r\n          // Get the rounding digit at index j of w.\r\n          rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\r\n        }\r\n      }\r\n\r\n      // Are there any non-zero digits after the rounding digit?\r\n      isTruncated = isTruncated || sd < 0 ||\r\n        xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\r\n\r\n      // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right\r\n      // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression\r\n      // will give 714.\r\n\r\n      roundUp = rm < 4\r\n        ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n        : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n            rm == (x.s < 0 ? 8 : 7));\r\n\r\n      if (sd < 1 || !xd[0]) {\r\n        xd.length = 0;\r\n        if (roundUp) {\r\n\r\n          // Convert sd to decimal places.\r\n          sd -= x.e + 1;\r\n\r\n          // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n          xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n          x.e = -sd || 0;\r\n        } else {\r\n\r\n          // Zero.\r\n          xd[0] = x.e = 0;\r\n        }\r\n\r\n        return x;\r\n      }\r\n\r\n      // Remove excess digits.\r\n      if (i == 0) {\r\n        xd.length = xdi;\r\n        k = 1;\r\n        xdi--;\r\n      } else {\r\n        xd.length = xdi + 1;\r\n        k = mathpow(10, LOG_BASE - i);\r\n\r\n        // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n        // j > 0 means i > number of leading zeros of w.\r\n        xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\r\n      }\r\n\r\n      if (roundUp) {\r\n        for (;;) {\r\n\r\n          // Is the digit to be rounded up in the first word of xd?\r\n          if (xdi == 0) {\r\n\r\n            // i will be the length of xd[0] before k is added.\r\n            for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\r\n            j = xd[0] += k;\r\n            for (k = 1; j >= 10; j /= 10) k++;\r\n\r\n            // if i != k the length has increased.\r\n            if (i != k) {\r\n              x.e++;\r\n              if (xd[0] == BASE) xd[0] = 1;\r\n            }\r\n\r\n            break;\r\n          } else {\r\n            xd[xdi] += k;\r\n            if (xd[xdi] != BASE) break;\r\n            xd[xdi--] = 0;\r\n            k = 1;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n    }\r\n\r\n    if (external) {\r\n\r\n      // Overflow?\r\n      if (x.e > Ctor.maxE) {\r\n\r\n        // Infinity.\r\n        x.d = null;\r\n        x.e = NaN;\r\n\r\n      // Underflow?\r\n      } else if (x.e < Ctor.minE) {\r\n\r\n        // Zero.\r\n        x.e = 0;\r\n        x.d = [0];\r\n        // Ctor.underflow = true;\r\n      } // else Ctor.underflow = false;\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function finiteToString(x, isExp, sd) {\r\n    if (!x.isFinite()) return nonFiniteToString(x);\r\n    var k,\r\n      e = x.e,\r\n      str = digitsToString(x.d),\r\n      len = str.length;\r\n\r\n    if (isExp) {\r\n      if (sd && (k = sd - len) > 0) {\r\n        str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n      } else if (len > 1) {\r\n        str = str.charAt(0) + '.' + str.slice(1);\r\n      }\r\n\r\n      str = str + (x.e < 0 ? 'e' : 'e+') + x.e;\r\n    } else if (e < 0) {\r\n      str = '0.' + getZeroString(-e - 1) + str;\r\n      if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n    } else if (e >= len) {\r\n      str += getZeroString(e + 1 - len);\r\n      if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n    } else {\r\n      if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n      if (sd && (k = sd - len) > 0) {\r\n        if (e + 1 === len) str += '.';\r\n        str += getZeroString(k);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // Calculate the base 10 exponent from the base 1e7 exponent.\r\n  function getBase10Exponent(digits, e) {\r\n    var w = digits[0];\r\n\r\n    // Add the number of digits of the first word of the digits array.\r\n    for ( e *= LOG_BASE; w >= 10; w /= 10) e++;\r\n    return e;\r\n  }\r\n\r\n\r\n  function getLn10(Ctor, sd, pr) {\r\n    if (sd > LN10_PRECISION) {\r\n\r\n      // Reset global state in case the exception is caught.\r\n      external = true;\r\n      if (pr) Ctor.precision = pr;\r\n      throw Error(precisionLimitExceeded);\r\n    }\r\n    return finalise(new Ctor(LN10), sd, 1, true);\r\n  }\r\n\r\n\r\n  function getPi(Ctor, sd, rm) {\r\n    if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\r\n    return finalise(new Ctor(PI), sd, rm, true);\r\n  }\r\n\r\n\r\n  function getPrecision(digits) {\r\n    var w = digits.length - 1,\r\n      len = w * LOG_BASE + 1;\r\n\r\n    w = digits[w];\r\n\r\n    // If non-zero...\r\n    if (w) {\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      for (; w % 10 == 0; w /= 10) len--;\r\n\r\n      // Add the number of digits of the first word.\r\n      for (w = digits[0]; w >= 10; w /= 10) len++;\r\n    }\r\n\r\n    return len;\r\n  }\r\n\r\n\r\n  function getZeroString(k) {\r\n    var zs = '';\r\n    for (; k--;) zs += '0';\r\n    return zs;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an\r\n   * integer of type number.\r\n   *\r\n   * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.\r\n   *\r\n   */\r\n  function intPow(Ctor, x, n, pr) {\r\n    var isTruncated,\r\n      r = new Ctor(1),\r\n\r\n      // Max n of 9007199254740991 takes 53 loop iterations.\r\n      // Maximum digits array length; leaves [28, 34] guard digits.\r\n      k = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n    external = false;\r\n\r\n    for (;;) {\r\n      if (n % 2) {\r\n        r = r.times(x);\r\n        if (truncate(r.d, k)) isTruncated = true;\r\n      }\r\n\r\n      n = mathfloor(n / 2);\r\n      if (n === 0) {\r\n\r\n        // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.\r\n        n = r.d.length - 1;\r\n        if (isTruncated && r.d[n] === 0) ++r.d[n];\r\n        break;\r\n      }\r\n\r\n      x = x.times(x);\r\n      truncate(x.d, k);\r\n    }\r\n\r\n    external = true;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  function isOdd(n) {\r\n    return n.d[n.d.length - 1] & 1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Handle `max` and `min`. `ltgt` is 'lt' or 'gt'.\r\n   */\r\n  function maxOrMin(Ctor, args, ltgt) {\r\n    var y,\r\n      x = new Ctor(args[0]),\r\n      i = 0;\r\n\r\n    for (; ++i < args.length;) {\r\n      y = new Ctor(args[i]);\r\n      if (!y.s) {\r\n        x = y;\r\n        break;\r\n      } else if (x[ltgt](y)) {\r\n        x = y;\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   * Taylor/Maclaurin series.\r\n   *\r\n   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n   *\r\n   * Argument reduction:\r\n   *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n   *   exp(x) = exp(x / 2^k)^(2^k)\r\n   *\r\n   * Previously, the argument was initially reduced by\r\n   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n   * found to be slower than just dividing repeatedly by 32 as above.\r\n   *\r\n   * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\r\n   * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\r\n   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n   *\r\n   *  exp(Infinity)  = Infinity\r\n   *  exp(-Infinity) = 0\r\n   *  exp(NaN)       = NaN\r\n   *  exp(±0)        = 1\r\n   *\r\n   *  exp(x) is non-terminating for any finite, non-zero x.\r\n   *\r\n   *  The result will always be correctly rounded.\r\n   *\r\n   */\r\n  function naturalExponential(x, sd) {\r\n    var denominator, guard, j, pow, sum, t, wpr,\r\n      rep = 0,\r\n      i = 0,\r\n      k = 0,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // 0/NaN/Infinity?\r\n    if (!x.d || !x.d[0] || x.e > 17) {\r\n\r\n      return new Ctor(x.d\r\n        ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0\r\n        : x.s ? x.s < 0 ? 0 : x : 0 / 0);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    t = new Ctor(0.03125);\r\n\r\n    // while abs(x) >= 0.1\r\n    while (x.e > -2) {\r\n\r\n      // x = x / 2^5\r\n      x = x.times(t);\r\n      k += 5;\r\n    }\r\n\r\n    // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision\r\n    // necessary to ensure the first 4 rounding digits are correct.\r\n    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n    wpr += guard;\r\n    denominator = pow = sum = new Ctor(1);\r\n    Ctor.precision = wpr;\r\n\r\n    for (;;) {\r\n      pow = finalise(pow.times(x), wpr, 1);\r\n      denominator = denominator.times(++i);\r\n      t = sum.plus(divide(pow, denominator, wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        j = k;\r\n        while (j--) sum = finalise(sum.times(sum), wpr, 1);\r\n\r\n        // Check to see if the first 4 rounding digits are [49]999.\r\n        // If so, repeat the summation with a higher precision, otherwise\r\n        // e.g. with precision: 18, rounding: 1\r\n        // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n\r\n          if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += 10;\r\n            denominator = pow = t = new Ctor(1);\r\n            i = 0;\r\n            rep++;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   *  ln(-n)        = NaN\r\n   *  ln(0)         = -Infinity\r\n   *  ln(-0)        = -Infinity\r\n   *  ln(1)         = 0\r\n   *  ln(Infinity)  = Infinity\r\n   *  ln(-Infinity) = NaN\r\n   *  ln(NaN)       = NaN\r\n   *\r\n   *  ln(n) (n != 1) is non-terminating.\r\n   *\r\n   */\r\n  function naturalLogarithm(y, sd) {\r\n    var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,\r\n      n = 1,\r\n      guard = 10,\r\n      x = y,\r\n      xd = x.d,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // Is x negative or Infinity, NaN, 0 or 1?\r\n    if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\r\n      return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    Ctor.precision = wpr += guard;\r\n    c = digitsToString(xd);\r\n    c0 = c.charAt(0);\r\n\r\n    if (Math.abs(e = x.e) < 1.5e15) {\r\n\r\n      // Argument reduction.\r\n      // The series converges faster the closer the argument is to 1, so using\r\n      // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n      // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n      // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n      // later be divided by this number, then separate out the power of 10 using\r\n      // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n      // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n      //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n      // max n is 6 (gives 0.7 - 1.3)\r\n      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n        x = x.times(y);\r\n        c = digitsToString(x.d);\r\n        c0 = c.charAt(0);\r\n        n++;\r\n      }\r\n\r\n      e = x.e;\r\n\r\n      if (c0 > 1) {\r\n        x = new Ctor('0.' + c);\r\n        e++;\r\n      } else {\r\n        x = new Ctor(c0 + '.' + c.slice(1));\r\n      }\r\n    } else {\r\n\r\n      // The argument reduction method above may result in overflow if the argument y is a massive\r\n      // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n      // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n      t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n      x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n      Ctor.precision = pr;\r\n\r\n      return sd == null ? finalise(x, pr, rm, external = true) : x;\r\n    }\r\n\r\n    // x1 is x reduced to a value near 1.\r\n    x1 = x;\r\n\r\n    // Taylor series.\r\n    // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n    // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n    sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\r\n    x2 = finalise(x.times(x), wpr, 1);\r\n    denominator = 3;\r\n\r\n    for (;;) {\r\n      numerator = finalise(numerator.times(x2), wpr, 1);\r\n      t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        sum = sum.times(2);\r\n\r\n        // Reverse the argument reduction. Check that e is not 0 because, besides preventing an\r\n        // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.\r\n        if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n        sum = divide(sum, new Ctor(n), wpr, 1);\r\n\r\n        // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\r\n        // been repeated previously) and the first 4 rounding digits 9999?\r\n        // If so, restart the summation with a higher precision, otherwise\r\n        // e.g. with precision: 12, rounding: 1\r\n        // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n          if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += guard;\r\n            t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\r\n            x2 = finalise(x.times(x), wpr, 1);\r\n            denominator = rep = 1;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n      denominator += 2;\r\n    }\r\n  }\r\n\r\n\r\n  // ±Infinity, NaN.\r\n  function nonFiniteToString(x) {\r\n    // Unsigned.\r\n    return String(x.s * x.s / 0);\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from string `str`.\r\n   */\r\n  function parseDecimal(x, str) {\r\n    var e, i, len;\r\n\r\n    // Decimal point?\r\n    if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = str.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +str.slice(i + 1);\r\n      str = str.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\r\n    str = str.slice(i, len);\r\n\r\n    if (str) {\r\n      len -= i;\r\n      x.e = e = e - i - 1;\r\n      x.d = [];\r\n\r\n      // Transform base\r\n\r\n      // e is the base 10 exponent.\r\n      // i is where to slice str to get the first word of the digits array.\r\n      i = (e + 1) % LOG_BASE;\r\n      if (e < 0) i += LOG_BASE;\r\n\r\n      if (i < len) {\r\n        if (i) x.d.push(+str.slice(0, i));\r\n        for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n        str = str.slice(i);\r\n        i = LOG_BASE - str.length;\r\n      } else {\r\n        i -= len;\r\n      }\r\n\r\n      for (; i--;) str += '0';\r\n      x.d.push(+str);\r\n\r\n      if (external) {\r\n\r\n        // Overflow?\r\n        if (x.e > x.constructor.maxE) {\r\n\r\n          // Infinity.\r\n          x.d = null;\r\n          x.e = NaN;\r\n\r\n        // Underflow?\r\n        } else if (x.e < x.constructor.minE) {\r\n\r\n          // Zero.\r\n          x.e = 0;\r\n          x.d = [0];\r\n          // x.constructor.underflow = true;\r\n        } // else x.constructor.underflow = false;\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.e = 0;\r\n      x.d = [0];\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.\r\n   */\r\n  function parseOther(x, str) {\r\n    var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\r\n\r\n    if (str.indexOf('_') > -1) {\r\n      str = str.replace(/(\\d)_(?=\\d)/g, '$1');\r\n      if (isDecimal.test(str)) return parseDecimal(x, str);\r\n    } else if (str === 'Infinity' || str === 'NaN') {\r\n      if (!+str) x.s = NaN;\r\n      x.e = NaN;\r\n      x.d = null;\r\n      return x;\r\n    }\r\n\r\n    if (isHex.test(str))  {\r\n      base = 16;\r\n      str = str.toLowerCase();\r\n    } else if (isBinary.test(str))  {\r\n      base = 2;\r\n    } else if (isOctal.test(str))  {\r\n      base = 8;\r\n    } else {\r\n      throw Error(invalidArgument + str);\r\n    }\r\n\r\n    // Is there a binary exponent part?\r\n    i = str.search(/p/i);\r\n\r\n    if (i > 0) {\r\n      p = +str.slice(i + 1);\r\n      str = str.substring(2, i);\r\n    } else {\r\n      str = str.slice(2);\r\n    }\r\n\r\n    // Convert `str` as an integer then divide the result by `base` raised to a power such that the\r\n    // fraction part will be restored.\r\n    i = str.indexOf('.');\r\n    isFloat = i >= 0;\r\n    Ctor = x.constructor;\r\n\r\n    if (isFloat) {\r\n      str = str.replace('.', '');\r\n      len = str.length;\r\n      i = len - i;\r\n\r\n      // log[10](16) = 1.2041... , log[10](88) = 1.9444....\r\n      divisor = intPow(Ctor, new Ctor(base), i, i * 2);\r\n    }\r\n\r\n    xd = convertBase(str, base, BASE);\r\n    xe = xd.length - 1;\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xe; xd[i] === 0; --i) xd.pop();\r\n    if (i < 0) return new Ctor(x.s * 0);\r\n    x.e = getBase10Exponent(xd, xe);\r\n    x.d = xd;\r\n    external = false;\r\n\r\n    // At what precision to perform the division to ensure exact conversion?\r\n    // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)\r\n    // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412\r\n    // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.\r\n    // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount\r\n    // Therefore using 4 * the number of digits of str will always be enough.\r\n    if (isFloat) x = divide(x, divisor, len * 4);\r\n\r\n    // Multiply by the binary exponent part if present.\r\n    if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\r\n    external = true;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function sine(Ctor, x) {\r\n    var k,\r\n      len = x.d.length;\r\n\r\n    if (len < 3) {\r\n      return x.isZero() ? x : taylorSeries(Ctor, 2, x, x);\r\n    }\r\n\r\n    // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)\r\n    // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)\r\n    // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    k = 1.4 * Math.sqrt(len);\r\n    k = k > 16 ? 16 : k | 0;\r\n\r\n    x = x.times(1 / tinyPow(5, k));\r\n    x = taylorSeries(Ctor, 2, x, x);\r\n\r\n    // Reverse argument reduction\r\n    var sin2_x,\r\n      d5 = new Ctor(5),\r\n      d16 = new Ctor(16),\r\n      d20 = new Ctor(20);\r\n    for (; k--;) {\r\n      sin2_x = x.times(x);\r\n      x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  // Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.\r\n  function taylorSeries(Ctor, n, x, y, isHyperbolic) {\r\n    var j, t, u, x2,\r\n      i = 1,\r\n      pr = Ctor.precision,\r\n      k = Math.ceil(pr / LOG_BASE);\r\n\r\n    external = false;\r\n    x2 = x.times(x);\r\n    u = new Ctor(y);\r\n\r\n    for (;;) {\r\n      t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      u = isHyperbolic ? y.plus(t) : y.minus(t);\r\n      y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      t = u.plus(y);\r\n\r\n      if (t.d[k] !== void 0) {\r\n        for (j = k; t.d[j] === u.d[j] && j--;);\r\n        if (j == -1) break;\r\n      }\r\n\r\n      j = u;\r\n      u = y;\r\n      y = t;\r\n      t = j;\r\n      i++;\r\n    }\r\n\r\n    external = true;\r\n    t.d.length = k + 1;\r\n\r\n    return t;\r\n  }\r\n\r\n\r\n  // Exponent e must be positive and non-zero.\r\n  function tinyPow(b, e) {\r\n    var n = b;\r\n    while (--e) n *= b;\r\n    return n;\r\n  }\r\n\r\n\r\n  // Return the absolute value of `x` reduced to less than or equal to half pi.\r\n  function toLessThanHalfPi(Ctor, x) {\r\n    var t,\r\n      isNeg = x.s < 0,\r\n      pi = getPi(Ctor, Ctor.precision, 1),\r\n      halfPi = pi.times(0.5);\r\n\r\n    x = x.abs();\r\n\r\n    if (x.lte(halfPi)) {\r\n      quadrant = isNeg ? 4 : 1;\r\n      return x;\r\n    }\r\n\r\n    t = x.divToInt(pi);\r\n\r\n    if (t.isZero()) {\r\n      quadrant = isNeg ? 3 : 2;\r\n    } else {\r\n      x = x.minus(t.times(pi));\r\n\r\n      // 0 <= x < pi\r\n      if (x.lte(halfPi)) {\r\n        quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);\r\n        return x;\r\n      }\r\n\r\n      quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);\r\n    }\r\n\r\n    return x.minus(pi).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return the value of Decimal `x` as a string in base `baseOut`.\r\n   *\r\n   * If the optional `sd` argument is present include a binary exponent suffix.\r\n   */\r\n  function toStringBinary(x, baseOut, sd, rm) {\r\n    var base, e, i, k, len, roundUp, str, xd, y,\r\n      Ctor = x.constructor,\r\n      isExp = sd !== void 0;\r\n\r\n    if (isExp) {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    } else {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    }\r\n\r\n    if (!x.isFinite()) {\r\n      str = nonFiniteToString(x);\r\n    } else {\r\n      str = finiteToString(x);\r\n      i = str.indexOf('.');\r\n\r\n      // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:\r\n      // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))\r\n      // minBinaryExponent = floor(decimalExponent * log[2](10))\r\n      // log[2](10) = 3.321928094887362347870319429489390175864\r\n\r\n      if (isExp) {\r\n        base = 2;\r\n        if (baseOut == 16) {\r\n          sd = sd * 4 - 3;\r\n        } else if (baseOut == 8) {\r\n          sd = sd * 3 - 2;\r\n        }\r\n      } else {\r\n        base = baseOut;\r\n      }\r\n\r\n      // Convert the number as an integer then divide the result by its base raised to a power such\r\n      // that the fraction part will be restored.\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        str = str.replace('.', '');\r\n        y = new Ctor(1);\r\n        y.e = str.length - i;\r\n        y.d = convertBase(finiteToString(y), 10, base);\r\n        y.e = y.d.length;\r\n      }\r\n\r\n      xd = convertBase(str, 10, base);\r\n      e = len = xd.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xd[--len] == 0;) xd.pop();\r\n\r\n      if (!xd[0]) {\r\n        str = isExp ? '0p+0' : '0';\r\n      } else {\r\n        if (i < 0) {\r\n          e--;\r\n        } else {\r\n          x = new Ctor(x);\r\n          x.d = xd;\r\n          x.e = e;\r\n          x = divide(x, y, sd, rm, 0, base);\r\n          xd = x.d;\r\n          e = x.e;\r\n          roundUp = inexact;\r\n        }\r\n\r\n        // The rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        i = xd[sd];\r\n        k = base / 2;\r\n        roundUp = roundUp || xd[sd + 1] !== void 0;\r\n\r\n        roundUp = rm < 4\r\n          ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))\r\n          : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||\r\n            rm === (x.s < 0 ? 8 : 7));\r\n\r\n        xd.length = sd;\r\n\r\n        if (roundUp) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (; ++xd[--sd] > base - 1;) {\r\n            xd[sd] = 0;\r\n            if (!sd) {\r\n              ++e;\r\n              xd.unshift(1);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n\r\n        // Add binary exponent suffix?\r\n        if (isExp) {\r\n          if (len > 1) {\r\n            if (baseOut == 16 || baseOut == 8) {\r\n              i = baseOut == 16 ? 4 : 3;\r\n              for (--len; len % i; len++) str += '0';\r\n              xd = convertBase(str, base, baseOut);\r\n              for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n              // xd[0] will always be be 1\r\n              for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n            } else {\r\n              str = str.charAt(0) + '.' + str.slice(1);\r\n            }\r\n          }\r\n\r\n          str =  str + (e < 0 ? 'p' : 'p+') + e;\r\n        } else if (e < 0) {\r\n          for (; ++e;) str = '0' + str;\r\n          str = '0.' + str;\r\n        } else {\r\n          if (++e > len) for (e -= len; e-- ;) str += '0';\r\n          else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);\r\n        }\r\n      }\r\n\r\n      str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;\r\n    }\r\n\r\n    return x.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Does not strip trailing zeros.\r\n  function truncate(arr, len) {\r\n    if (arr.length > len) {\r\n      arr.length = len;\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  // Decimal methods\r\n\r\n\r\n  /*\r\n   *  abs\r\n   *  acos\r\n   *  acosh\r\n   *  add\r\n   *  asin\r\n   *  asinh\r\n   *  atan\r\n   *  atanh\r\n   *  atan2\r\n   *  cbrt\r\n   *  ceil\r\n   *  clamp\r\n   *  clone\r\n   *  config\r\n   *  cos\r\n   *  cosh\r\n   *  div\r\n   *  exp\r\n   *  floor\r\n   *  hypot\r\n   *  ln\r\n   *  log\r\n   *  log2\r\n   *  log10\r\n   *  max\r\n   *  min\r\n   *  mod\r\n   *  mul\r\n   *  pow\r\n   *  random\r\n   *  round\r\n   *  set\r\n   *  sign\r\n   *  sin\r\n   *  sinh\r\n   *  sqrt\r\n   *  sub\r\n   *  sum\r\n   *  tan\r\n   *  tanh\r\n   *  trunc\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function abs(x) {\r\n    return new this(x).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine in radians of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function acos(x) {\r\n    return new this(x).acos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function acosh(x) {\r\n    return new this(x).acosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function add(x, y) {\r\n    return new this(x).plus(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function asin(x) {\r\n    return new this(x).asin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function asinh(x) {\r\n    return new this(x).asinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function atan(x) {\r\n    return new this(x).atan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function atanh(x) {\r\n    return new this(x).atanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi\r\n   * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi, pi]\r\n   *\r\n   * y {number|string|Decimal} The y-coordinate.\r\n   * x {number|string|Decimal} The x-coordinate.\r\n   *\r\n   * atan2(±0, -0)               = ±pi\r\n   * atan2(±0, +0)               = ±0\r\n   * atan2(±0, -x)               = ±pi for x > 0\r\n   * atan2(±0, x)                = ±0 for x > 0\r\n   * atan2(-y, ±0)               = -pi/2 for y > 0\r\n   * atan2(y, ±0)                = pi/2 for y > 0\r\n   * atan2(±y, -Infinity)        = ±pi for finite y > 0\r\n   * atan2(±y, +Infinity)        = ±0 for finite y > 0\r\n   * atan2(±Infinity, x)         = ±pi/2 for finite x\r\n   * atan2(±Infinity, -Infinity) = ±3*pi/4\r\n   * atan2(±Infinity, +Infinity) = ±pi/4\r\n   * atan2(NaN, x) = NaN\r\n   * atan2(y, NaN) = NaN\r\n   *\r\n   */\r\n  function atan2(y, x) {\r\n    y = new this(y);\r\n    x = new this(x);\r\n    var r,\r\n      pr = this.precision,\r\n      rm = this.rounding,\r\n      wpr = pr + 4;\r\n\r\n    // Either NaN\r\n    if (!y.s || !x.s) {\r\n      r = new this(NaN);\r\n\r\n    // Both ±Infinity\r\n    } else if (!y.d && !x.d) {\r\n      r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\r\n      r.s = y.s;\r\n\r\n    // x is ±Infinity or y is ±0\r\n    } else if (!x.d || y.isZero()) {\r\n      r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\r\n      r.s = y.s;\r\n\r\n    // y is ±Infinity or x is ±0\r\n    } else if (!y.d || x.isZero()) {\r\n      r = getPi(this, wpr, 1).times(0.5);\r\n      r.s = y.s;\r\n\r\n    // Both non-zero and finite\r\n    } else if (x.s < 0) {\r\n      this.precision = wpr;\r\n      this.rounding = 1;\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n      x = getPi(this, wpr, 1);\r\n      this.precision = pr;\r\n      this.rounding = rm;\r\n      r = y.s < 0 ? r.minus(x) : r.plus(x);\r\n    } else {\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function cbrt(x) {\r\n    return new this(x).cbrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ceil(x) {\r\n    return finalise(x = new this(x), x.e + 1, 2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` clamped to the range delineated by `min` and `max`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * min {number|string|Decimal}\r\n   * max {number|string|Decimal}\r\n   *\r\n   */\r\n  function clamp(x, min, max) {\r\n    return new this(x).clamp(min, max);\r\n  }\r\n\r\n\r\n  /*\r\n   * Configure global settings for a Decimal constructor.\r\n   *\r\n   * `obj` is an object with one or more of the following properties,\r\n   *\r\n   *   precision  {number}\r\n   *   rounding   {number}\r\n   *   toExpNeg   {number}\r\n   *   toExpPos   {number}\r\n   *   maxE       {number}\r\n   *   minE       {number}\r\n   *   modulo     {number}\r\n   *   crypto     {boolean|number}\r\n   *   defaults   {true}\r\n   *\r\n   * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n   *\r\n   */\r\n  function config(obj) {\r\n    if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');\r\n    var i, p, v,\r\n      useDefaults = obj.defaults === true,\r\n      ps = [\r\n        'precision', 1, MAX_DIGITS,\r\n        'rounding', 0, 8,\r\n        'toExpNeg', -EXP_LIMIT, 0,\r\n        'toExpPos', 0, EXP_LIMIT,\r\n        'maxE', 0, EXP_LIMIT,\r\n        'minE', -EXP_LIMIT, 0,\r\n        'modulo', 0, 9\r\n      ];\r\n\r\n    for (i = 0; i < ps.length; i += 3) {\r\n      if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\r\n      if ((v = obj[p]) !== void 0) {\r\n        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    if (p = 'crypto', useDefaults) this[p] = DEFAULTS[p];\r\n    if ((v = obj[p]) !== void 0) {\r\n      if (v === true || v === false || v === 0 || v === 1) {\r\n        if (v) {\r\n          if (typeof crypto != 'undefined' && crypto &&\r\n            (crypto.getRandomValues || crypto.randomBytes)) {\r\n            this[p] = true;\r\n          } else {\r\n            throw Error(cryptoUnavailable);\r\n          }\r\n        } else {\r\n          this[p] = false;\r\n        }\r\n      } else {\r\n        throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cos(x) {\r\n    return new this(x).cos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cosh(x) {\r\n    return new this(x).cosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n   * constructor.\r\n   *\r\n   */\r\n  function clone(obj) {\r\n    var i, p, ps;\r\n\r\n    /*\r\n     * The Decimal constructor and exported function.\r\n     * Return a new Decimal instance.\r\n     *\r\n     * v {number|string|Decimal} A numeric value.\r\n     *\r\n     */\r\n    function Decimal(v) {\r\n      var e, i, t,\r\n        x = this;\r\n\r\n      // Decimal called without new.\r\n      if (!(x instanceof Decimal)) return new Decimal(v);\r\n\r\n      // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n      // which points to Object.\r\n      x.constructor = Decimal;\r\n\r\n      // Duplicate.\r\n      if (isDecimalInstance(v)) {\r\n        x.s = v.s;\r\n\r\n        if (external) {\r\n          if (!v.d || v.e > Decimal.maxE) {\r\n\r\n            // Infinity.\r\n            x.e = NaN;\r\n            x.d = null;\r\n          } else if (v.e < Decimal.minE) {\r\n\r\n            // Zero.\r\n            x.e = 0;\r\n            x.d = [0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.d = v.d.slice();\r\n          }\r\n        } else {\r\n          x.e = v.e;\r\n          x.d = v.d ? v.d.slice() : v.d;\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      t = typeof v;\r\n\r\n      if (t === 'number') {\r\n        if (v === 0) {\r\n          x.s = 1 / v < 0 ? -1 : 1;\r\n          x.e = 0;\r\n          x.d = [0];\r\n          return;\r\n        }\r\n\r\n        if (v < 0) {\r\n          v = -v;\r\n          x.s = -1;\r\n        } else {\r\n          x.s = 1;\r\n        }\r\n\r\n        // Fast path for small integers.\r\n        if (v === ~~v && v < 1e7) {\r\n          for (e = 0, i = v; i >= 10; i /= 10) e++;\r\n\r\n          if (external) {\r\n            if (e > Decimal.maxE) {\r\n              x.e = NaN;\r\n              x.d = null;\r\n            } else if (e < Decimal.minE) {\r\n              x.e = 0;\r\n              x.d = [0];\r\n            } else {\r\n              x.e = e;\r\n              x.d = [v];\r\n            }\r\n          } else {\r\n            x.e = e;\r\n            x.d = [v];\r\n          }\r\n\r\n          return;\r\n\r\n        // Infinity, NaN.\r\n        } else if (v * 0 !== 0) {\r\n          if (!v) x.s = NaN;\r\n          x.e = NaN;\r\n          x.d = null;\r\n          return;\r\n        }\r\n\r\n        return parseDecimal(x, v.toString());\r\n\r\n      } else if (t !== 'string') {\r\n        throw Error(invalidArgument + v);\r\n      }\r\n\r\n      // Minus sign?\r\n      if ((i = v.charCodeAt(0)) === 45) {\r\n        v = v.slice(1);\r\n        x.s = -1;\r\n      } else {\r\n        // Plus sign?\r\n        if (i === 43) v = v.slice(1);\r\n        x.s = 1;\r\n      }\r\n\r\n      return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\r\n    }\r\n\r\n    Decimal.prototype = P;\r\n\r\n    Decimal.ROUND_UP = 0;\r\n    Decimal.ROUND_DOWN = 1;\r\n    Decimal.ROUND_CEIL = 2;\r\n    Decimal.ROUND_FLOOR = 3;\r\n    Decimal.ROUND_HALF_UP = 4;\r\n    Decimal.ROUND_HALF_DOWN = 5;\r\n    Decimal.ROUND_HALF_EVEN = 6;\r\n    Decimal.ROUND_HALF_CEIL = 7;\r\n    Decimal.ROUND_HALF_FLOOR = 8;\r\n    Decimal.EUCLID = 9;\r\n\r\n    Decimal.config = Decimal.set = config;\r\n    Decimal.clone = clone;\r\n    Decimal.isDecimal = isDecimalInstance;\r\n\r\n    Decimal.abs = abs;\r\n    Decimal.acos = acos;\r\n    Decimal.acosh = acosh;        // ES6\r\n    Decimal.add = add;\r\n    Decimal.asin = asin;\r\n    Decimal.asinh = asinh;        // ES6\r\n    Decimal.atan = atan;\r\n    Decimal.atanh = atanh;        // ES6\r\n    Decimal.atan2 = atan2;\r\n    Decimal.cbrt = cbrt;          // ES6\r\n    Decimal.ceil = ceil;\r\n    Decimal.clamp = clamp;\r\n    Decimal.cos = cos;\r\n    Decimal.cosh = cosh;          // ES6\r\n    Decimal.div = div;\r\n    Decimal.exp = exp;\r\n    Decimal.floor = floor;\r\n    Decimal.hypot = hypot;        // ES6\r\n    Decimal.ln = ln;\r\n    Decimal.log = log;\r\n    Decimal.log10 = log10;        // ES6\r\n    Decimal.log2 = log2;          // ES6\r\n    Decimal.max = max;\r\n    Decimal.min = min;\r\n    Decimal.mod = mod;\r\n    Decimal.mul = mul;\r\n    Decimal.pow = pow;\r\n    Decimal.random = random;\r\n    Decimal.round = round;\r\n    Decimal.sign = sign;          // ES6\r\n    Decimal.sin = sin;\r\n    Decimal.sinh = sinh;          // ES6\r\n    Decimal.sqrt = sqrt;\r\n    Decimal.sub = sub;\r\n    Decimal.sum = sum;\r\n    Decimal.tan = tan;\r\n    Decimal.tanh = tanh;          // ES6\r\n    Decimal.trunc = trunc;        // ES6\r\n\r\n    if (obj === void 0) obj = {};\r\n    if (obj) {\r\n      if (obj.defaults !== true) {\r\n        ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\r\n        for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n      }\r\n    }\r\n\r\n    Decimal.config(obj);\r\n\r\n    return Decimal;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function div(x, y) {\r\n    return new this(x).div(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The power to which to raise the base of the natural log.\r\n   *\r\n   */\r\n  function exp(x) {\r\n    return new this(x).exp();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function floor(x) {\r\n    return finalise(x = new this(x), x.e + 1, 3);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function hypot() {\r\n    var i, n,\r\n      t = new this(0);\r\n\r\n    external = false;\r\n\r\n    for (i = 0; i < arguments.length;) {\r\n      n = new this(arguments[i++]);\r\n      if (!n.d) {\r\n        if (n.s) {\r\n          external = true;\r\n          return new this(1 / 0);\r\n        }\r\n        t = n;\r\n      } else if (t.d) {\r\n        t = t.plus(n.times(n));\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return t.sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return true if object is a Decimal instance (where Decimal is any Decimal constructor),\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  function isDecimalInstance(obj) {\r\n    return obj instanceof Decimal || obj && obj.toStringTag === tag || false;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ln(x) {\r\n    return new this(x).ln();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base\r\n   * is specified, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * log[y](x)\r\n   *\r\n   * x {number|string|Decimal} The argument of the logarithm.\r\n   * y {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  function log(x, y) {\r\n    return new this(x).log(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log2(x) {\r\n    return new this(x).log(2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log10(x) {\r\n    return new this(x).log(10);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function max() {\r\n    return maxOrMin(this, arguments, 'lt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function min() {\r\n    return maxOrMin(this, arguments, 'gt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mod(x, y) {\r\n    return new this(x).mod(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mul(x, y) {\r\n    return new this(x).mul(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The base.\r\n   * y {number|string|Decimal} The exponent.\r\n   *\r\n   */\r\n  function pow(x, y) {\r\n    return new this(x).pow(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with\r\n   * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros\r\n   * are produced).\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.\r\n   *\r\n   */\r\n  function random(sd) {\r\n    var d, e, k, n,\r\n      i = 0,\r\n      r = new this(1),\r\n      rd = [];\r\n\r\n    if (sd === void 0) sd = this.precision;\r\n    else checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    k = Math.ceil(sd / LOG_BASE);\r\n\r\n    if (!this.crypto) {\r\n      for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\r\n\r\n    // Browsers supporting crypto.getRandomValues.\r\n    } else if (crypto.getRandomValues) {\r\n      d = crypto.getRandomValues(new Uint32Array(k));\r\n\r\n      for (; i < k;) {\r\n        n = d[i];\r\n\r\n        // 0 <= n < 4294967296\r\n        // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\r\n        if (n >= 4.29e9) {\r\n          d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\r\n        } else {\r\n\r\n          // 0 <= n <= 4289999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd[i++] = n % 1e7;\r\n        }\r\n      }\r\n\r\n    // Node.js supporting crypto.randomBytes.\r\n    } else if (crypto.randomBytes) {\r\n\r\n      // buffer\r\n      d = crypto.randomBytes(k *= 4);\r\n\r\n      for (; i < k;) {\r\n\r\n        // 0 <= n < 2147483648\r\n        n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);\r\n\r\n        // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\r\n        if (n >= 2.14e9) {\r\n          crypto.randomBytes(4).copy(d, i);\r\n        } else {\r\n\r\n          // 0 <= n <= 2139999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd.push(n % 1e7);\r\n          i += 4;\r\n        }\r\n      }\r\n\r\n      i = k / 4;\r\n    } else {\r\n      throw Error(cryptoUnavailable);\r\n    }\r\n\r\n    k = rd[--i];\r\n    sd %= LOG_BASE;\r\n\r\n    // Convert trailing digits to zeros according to sd.\r\n    if (k && sd) {\r\n      n = mathpow(10, LOG_BASE - sd);\r\n      rd[i] = (k / n | 0) * n;\r\n    }\r\n\r\n    // Remove trailing words which are zero.\r\n    for (; rd[i] === 0; i--) rd.pop();\r\n\r\n    // Zero?\r\n    if (i < 0) {\r\n      e = 0;\r\n      rd = [0];\r\n    } else {\r\n      e = -1;\r\n\r\n      // Remove leading words which are zero and adjust exponent accordingly.\r\n      for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\r\n\r\n      // Count the digits of the first word of rd to determine leading zeros.\r\n      for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\r\n\r\n      // Adjust the exponent for leading zeros of the first word of rd.\r\n      if (k < LOG_BASE) e -= LOG_BASE - k;\r\n    }\r\n\r\n    r.e = e;\r\n    r.d = rd;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.\r\n   *\r\n   * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function round(x) {\r\n    return finalise(x = new this(x), x.e + 1, this.rounding);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if x > 0,\r\n   *  -1    if x < 0,\r\n   *   0    if x is 0,\r\n   *  -0    if x is -0,\r\n   *   NaN  otherwise\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sign(x) {\r\n    x = new this(x);\r\n    return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sin(x) {\r\n    return new this(x).sin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sinh(x) {\r\n    return new this(x).sinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sqrt(x) {\r\n    return new this(x).sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function sub(x, y) {\r\n    return new this(x).sub(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sum of the arguments, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * Only the result is rounded, not the intermediate calculations.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function sum() {\r\n    var i = 0,\r\n      args = arguments,\r\n      x = new this(args[i]);\r\n\r\n    external = false;\r\n    for (; x.s && ++i < args.length;) x = x.plus(args[i]);\r\n    external = true;\r\n\r\n    return finalise(x, this.precision, this.rounding);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tan(x) {\r\n    return new this(x).tan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tanh(x) {\r\n    return new this(x).tanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` truncated to an integer.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function trunc(x) {\r\n    return finalise(x = new this(x), x.e + 1, 1);\r\n  }\r\n\r\n\r\n  // Create and configure initial Decimal constructor.\r\n  Decimal = clone(DEFAULTS);\r\n  Decimal.prototype.constructor = Decimal;\r\n  Decimal['default'] = Decimal.Decimal = Decimal;\r\n\r\n  // Create the internal constants from their string values.\r\n  LN10 = new Decimal(LN10);\r\n  PI = new Decimal(PI);\r\n\r\n\r\n  // Export.\r\n\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () {\r\n      return Decimal;\r\n    });\r\n\r\n  // Node and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    if (typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol') {\r\n      P[Symbol['for']('nodejs.util.inspect.custom')] = P.toString;\r\n      P[Symbol.toStringTag] = 'Decimal';\r\n    }\r\n\r\n    module.exports = Decimal;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalScope) {\r\n      globalScope = typeof self != 'undefined' && self && self.self == self ? self : window;\r\n    }\r\n\r\n    noConflict = globalScope.Decimal;\r\n    Decimal.noConflict = function () {\r\n      globalScope.Decimal = noConflict;\r\n      return Decimal;\r\n    };\r\n\r\n    globalScope.Decimal = Decimal;\r\n  }\r\n})(this);\r\n","import { Decimal } from 'decimal.js'\nimport { isBN, toBN } from 'web3-utils'\n\nconst PreciseDecimal = Decimal.clone({ defaults: true, toExpPos: 33 })\n\nconst toDecimal = v => (isBN(v) ? new PreciseDecimal(v.toString(10)) : new PreciseDecimal(v))\n\nconst input2Dec = (original, input) => (\n  input._n ? input.to(original._unit)._n : toDecimal(input)\n)\n\nexport default class EthVal {\n  constructor (src, unit = 'wei') {\n    if (src instanceof EthVal) {\n      this._n = toDecimal(src._n)\n      this._unit = src._unit\n    } else {\n      this._n = toDecimal(src)\n      this._unit = unit\n    }\n    [ 'mul', 'sub', 'div', 'add' ].forEach(method => {\n      this[method] = v => (\n        new EthVal(this._n[method].call(this._n, input2Dec(this, v)), this._unit)\n      )\n    })\n    ;[ 'gt', 'gte', 'lt', 'lte', 'eq' ].forEach(method => {\n      this[method] = v => (\n        this._n[method].call(this._n, input2Dec(this, v))\n      )\n    })\n  }\n\n  get isWei () {\n    return 'wei' === this._unit\n  }\n\n  get isGwei () {\n    return 'gwei' === this._unit\n  }\n\n  get isEth () {\n    return 'eth' === this._unit\n  }\n\n  get unit () {\n    return this._unit\n  }\n\n  scaleDown (v) {\n    return this.mul(toDecimal(10).pow(toDecimal(v)))\n  }\n\n  scaleUp (v) {\n    return this.div(toDecimal(10).pow(toDecimal(v)))\n  }\n\n  toWei () {\n    if (this.isWei) {\n      return new EthVal(this)\n    }\n    if (this.isGwei) {\n      const v = this.scaleDown(9)\n      v._unit = 'wei'\n      return v\n    }\n    if (this.isEth) {\n      const v = this.scaleDown(18)\n      v._unit = 'wei'\n      return v\n    }\n\n    throw new Error('Unit of measurement uncertain')\n  }\n\n  toGwei () {\n    if (this.isWei) {\n      const v = this.scaleUp(9)\n      v._unit = 'gwei'\n      return v\n    }\n    if (this.isGwei) {\n      return new EthVal(this)\n    }\n    if (this.isEth) {\n      const v = this.scaleDown(9)\n      v._unit = 'gwei'\n      return v\n    }\n\n    throw new Error('Unit of measurement uncertain')\n  }\n\n  toEth () {\n    if (this.isWei) {\n      const v = this.scaleUp(18)\n      v._unit = 'eth'\n      return v\n    }\n    if (this.isGwei) {\n      const v = this.scaleUp(9)\n      v._unit = 'eth'\n      return v\n    }\n    if (this.isEth) {\n      return new EthVal(this)\n    }\n\n    throw new Error('Unit of measurement uncertain')\n  }\n\n  to (unit) {\n    switch (unit) {\n      case 'wei':\n        return this.toWei()\n      case 'gwei':\n        return this.toGwei()\n      case 'eth':\n        return this.toEth()\n      default:\n        throw new Error(`Unrecognized unit: ${unit}`)\n    }\n  }\n\n  toString (v) {\n    switch (v) {\n      case 2: {\n        let str = this._n.toBinary()\n        str = str.substr(str.indexOf('b') + 1)\n        return str\n      }\n      case 16:\n        return this._n.toHexadecimal()\n      default:\n        return this._n.toString()\n    }\n  }\n\n  toFixed (v) {\n    return this._n.toFixed(v)\n  }\n\n  toNumber () {\n    return this._n.toNumber()\n  }\n\n  toWeiBN () {\n    return toBN(new EthVal(this.toString(), this._unit).toWei().toString())\n  }\n}\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SHARE_SITES = void 0;\nvar SHARE_SITES = {\n  GOOGLE: 'Google',\n  ICAL: 'iCal',\n  OUTLOOK: 'Outlook',\n  YAHOO: 'Yahoo'\n};\nexports.SHARE_SITES = SHARE_SITES;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = AddToCalendar;\nObject.defineProperty(exports, \"SHARE_SITES\", {\n  enumerable: true,\n  get: function get() {\n    return _enums.SHARE_SITES;\n  }\n});\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _enums = require(\"./enums\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction AddToCalendar(WrappedButton, WrappedDropdown) {\n  var _class, _temp2;\n\n  return _temp2 = _class =\n  /*#__PURE__*/\n  function (_Component) {\n    _inherits(AddToCalendarWrapped, _Component);\n\n    function AddToCalendarWrapped() {\n      var _getPrototypeOf2;\n\n      var _temp, _this;\n\n      _classCallCheck(this, AddToCalendarWrapped);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _possibleConstructorReturn(_this, (_temp = _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddToCalendarWrapped)).call.apply(_getPrototypeOf2, [this].concat(args))), _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n        dropdownOpen: false\n      }), _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleCalendarButtonClick\", function (e) {\n        var filename = _this.props.filename;\n        e.preventDefault();\n        var url = e.currentTarget.getAttribute('href');\n\n        if (url.startsWith('BEGIN')) {\n          var blob = new Blob([url], {\n            type: 'text/calendar;charset=utf-8'\n          });\n\n          if ((0, _utils.isInternetExplorer)()) {\n            window.navigator.msSaveOrOpenBlob(blob, \"\".concat(filename, \".ics\"));\n          } else {\n            var link = document.createElement('a');\n            link.href = window.URL.createObjectURL(blob);\n            link.setAttribute('download', \"\".concat(filename, \".ics\"));\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n          }\n        } else {\n          window.open(url, '_blank');\n        }\n      }), _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleDropdownToggle\", function (e) {\n        e.preventDefault();\n\n        _this.setState(function (prevState) {\n          return {\n            dropdownOpen: !prevState.dropdownOpen\n          };\n        });\n      }), _temp));\n    }\n\n    _createClass(AddToCalendarWrapped, [{\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        var _this$props = this.props,\n            buttonProps = _this$props.buttonProps,\n            buttonText = _this$props.buttonText,\n            className = _this$props.className,\n            dropdownProps = _this$props.dropdownProps,\n            event = _this$props.event,\n            items = _this$props.items,\n            linkProps = _this$props.linkProps;\n        return _react.default.createElement(\"div\", {\n          className: className\n        }, _react.default.createElement(WrappedButton, _extends({}, buttonProps, {\n          onClick: this.handleDropdownToggle\n        }), buttonText), this.state.dropdownOpen && _react.default.createElement(WrappedDropdown, _extends({}, dropdownProps, {\n          isOpen: this.state.dropdownOpen,\n          onRequestClose: this.handleDropdownToggle\n        }), items.map(function (item) {\n          return _react.default.createElement(\"a\", _extends({}, linkProps, {\n            key: item,\n            onClick: _this2.handleCalendarButtonClick,\n            href: (0, _utils.buildShareUrl)(event, item)\n          }), item);\n        })));\n      }\n    }]);\n\n    return AddToCalendarWrapped;\n  }(_react.Component), _defineProperty(_class, \"propTypes\", {\n    buttonProps: _propTypes.default.shape(),\n    buttonText: _propTypes.default.node,\n    className: _propTypes.default.string,\n    dropdownProps: _propTypes.default.shape(),\n    event: _propTypes.default.shape({\n      description: _propTypes.default.string,\n      duration: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]).isRequired,\n      endDatetime: _propTypes.default.string.isRequired,\n      location: _propTypes.default.string,\n      startDatetime: _propTypes.default.string.isRequired,\n      title: _propTypes.default.string\n    }).isRequired,\n    filename: _propTypes.default.string,\n    items: _propTypes.default.arrayOf(_propTypes.default.oneOf(Object.keys(_enums.SHARE_SITES).map(function (itm) {\n      return _enums.SHARE_SITES[itm];\n    }))),\n    linkProps: _propTypes.default.shape()\n  }), _defineProperty(_class, \"defaultProps\", {\n    buttonProps: {},\n    buttonText: 'Add to Calendar',\n    className: null,\n    dropdownProps: {},\n    filename: 'download',\n    items: Object.keys(_enums.SHARE_SITES).map(function (itm) {\n      return _enums.SHARE_SITES[itm];\n    }),\n    linkProps: {}\n  }), _temp2;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildShareUrl = exports.escapeICSDescription = exports.isInternetExplorer = exports.isMobile = exports.formatDuration = exports.formatDate = void 0;\n\nvar _enums = require(\"./enums\");\n\n/**\n * Converts Date String with UTC timezone to date consumable by calendar\n * apps. Changes +00:00 to Z.\n * @param {string} Date in YYYYMMDDTHHmmssZ format\n * @returns {string} Date with +00:00 replaceed with Z\n */\nvar formatDate = function formatDate(date) {\n  return date && date.replace('+00:00', 'Z');\n};\n\nexports.formatDate = formatDate;\n\nvar formatDuration = function formatDuration(duration) {\n  if (typeof duration === 'string') return duration;\n  var parts = duration.toString().split('.');\n\n  if (parts.length < 2) {\n    parts.push('00');\n  }\n\n  return parts.map(function (part) {\n    return part.length === 2 ? part : \"0\".concat(part);\n  }).join('');\n};\n/**\n * Tests provided UserAgent against Known Mobile User Agents\n * @returns {bool} isMobileDevice\n */\n\n\nexports.formatDuration = formatDuration;\n\nvar isMobile = function isMobile() {\n  return /Mobile|iP(hone|od|ad)|Android|BlackBerry|IEMobile/.test(window.navigator.userAgent || window.navigator.vendor || window.opera);\n};\n/**\n * Tests userAgent to see if browser is IE\n * @returns {bool} isInternetExplorer\n */\n\n\nexports.isMobile = isMobile;\n\nvar isInternetExplorer = function isInternetExplorer() {\n  return /MSIE/.test(window.navigator.userAgent) || /Trident/.test(window.navigator.userAgent);\n};\n\nexports.isInternetExplorer = isInternetExplorer;\n\nvar escapeICSDescription = function escapeICSDescription(description) {\n  return description.replace(/(\\r?\\n|<br ?\\/?>)/g, '\\\\n');\n};\n/**\n * Takes an event object and returns a Google Calendar Event URL\n * @param {string} event.description\n * @param {string} event.endDatetime\n * @param {string} event.location\n * @param {string} event.startDatetime\n * @param {string} event.title\n * @returns {string} Google Calendar Event URL\n */\n\n\nexports.escapeICSDescription = escapeICSDescription;\n\nvar googleShareUrl = function googleShareUrl(_ref) {\n  var description = _ref.description,\n      endDatetime = _ref.endDatetime,\n      location = _ref.location,\n      startDatetime = _ref.startDatetime,\n      timezone = _ref.timezone,\n      title = _ref.title;\n  return \"https://calendar.google.com/calendar/render?action=TEMPLATE&dates=\".concat(startDatetime, \"/\").concat(endDatetime).concat(timezone && \"&ctz=\".concat(timezone), \"&location=\").concat(location, \"&text=\").concat(title, \"&details=\").concat(description);\n};\n/**\n * Takes an event object and returns a Yahoo Calendar Event URL\n * @param {string} event.description\n * @param {string} event.duration\n * @param {string} event.location\n * @param {string} event.startDatetime\n * @param {string} event.title\n * @returns {string} Yahoo Calendar Event URL\n */\n\n\nvar yahooShareUrl = function yahooShareUrl(_ref2) {\n  var description = _ref2.description,\n      duration = _ref2.duration,\n      location = _ref2.location,\n      startDatetime = _ref2.startDatetime,\n      title = _ref2.title;\n  return \"https://calendar.yahoo.com/?v=60&view=d&type=20&title=\".concat(title, \"&st=\").concat(startDatetime, \"&dur=\").concat(duration, \"&desc=\").concat(description, \"&in_loc=\").concat(location);\n};\n/**\n * Takes an event object and returns an array to be downloaded as ics file\n * @param {string} event.description\n * @param {string} event.endDatetime\n * @param {string} event.location\n * @param {string} event.startDatetime\n * @param {string} event.title\n * @returns {array} ICS Content\n */\n\n\nvar buildShareFile = function buildShareFile(_ref3) {\n  var _ref3$description = _ref3.description,\n      description = _ref3$description === void 0 ? '' : _ref3$description,\n      _ref3$ctz = _ref3.ctz,\n      ctz = _ref3$ctz === void 0 ? '' : _ref3$ctz,\n      endDatetime = _ref3.endDatetime,\n      _ref3$location = _ref3.location,\n      location = _ref3$location === void 0 ? '' : _ref3$location,\n      startDatetime = _ref3.startDatetime,\n      _ref3$timezone = _ref3.timezone,\n      timezone = _ref3$timezone === void 0 ? '' : _ref3$timezone,\n      _ref3$title = _ref3.title,\n      title = _ref3$title === void 0 ? '' : _ref3$title;\n  var content = ['BEGIN:VCALENDAR', 'VERSION:2.0', 'BEGIN:VEVENT', \"URL:\".concat(document.URL), 'METHOD:PUBLISH', // TODO: Will need to parse the date without Z for ics\n  // This means I'll probably have to require a date lib - luxon most likely or datefns\n  timezone === '' ? \"DTSTART:\".concat(startDatetime) : \"DTSTART;TZID=\".concat(timezone, \":\").concat(startDatetime), timezone === '' ? \"DTEND:\".concat(endDatetime) : \"DTEND;TZID=\".concat(timezone, \":\").concat(endDatetime), \"SUMMARY:\".concat(title), \"DESCRIPTION:\".concat(escapeICSDescription(description)), \"LOCATION:\".concat(location), 'END:VEVENT', 'END:VCALENDAR'].join('\\n');\n  return isMobile() ? encodeURI(\"data:text/calendar;charset=utf8,\".concat(content)) : content;\n};\n/**\n * Takes an event object and a type of URL and returns either a calendar event\n * URL or the contents of an ics file.\n * @param {string} event.description\n * @param {string} event.duration\n * @param {string} event.endDatetime\n * @param {string} event.location\n * @param {string} event.startDatetime\n * @param {string} event.title\n * @param {enum} type One of SHARE_SITES from ./enums\n */\n\n\nvar buildShareUrl = function buildShareUrl(_ref4, type) {\n  var _ref4$description = _ref4.description,\n      description = _ref4$description === void 0 ? '' : _ref4$description,\n      duration = _ref4.duration,\n      endDatetime = _ref4.endDatetime,\n      _ref4$location = _ref4.location,\n      location = _ref4$location === void 0 ? '' : _ref4$location,\n      startDatetime = _ref4.startDatetime,\n      _ref4$timezone = _ref4.timezone,\n      timezone = _ref4$timezone === void 0 ? '' : _ref4$timezone,\n      _ref4$title = _ref4.title,\n      title = _ref4$title === void 0 ? '' : _ref4$title;\n  var encodeURI = type !== _enums.SHARE_SITES.ICAL && type !== _enums.SHARE_SITES.OUTLOOK;\n  var data = {\n    description: encodeURI ? encodeURIComponent(description) : description,\n    duration: formatDuration(duration),\n    endDatetime: formatDate(endDatetime),\n    location: encodeURI ? encodeURIComponent(location) : location,\n    startDatetime: formatDate(startDatetime),\n    timezone: timezone,\n    title: encodeURI ? encodeURIComponent(title) : title\n  };\n\n  switch (type) {\n    case _enums.SHARE_SITES.GOOGLE:\n      return googleShareUrl(data);\n\n    case _enums.SHARE_SITES.YAHOO:\n      return yahooShareUrl(data);\n\n    default:\n      return buildShareFile(data);\n  }\n};\n\nexports.buildShareUrl = buildShareUrl;","/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file utils.js\n * @author Marek Kotewicz <marek@parity.io>\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\nvar ethjsUnit = require('ethjs-unit');\nvar utils = require('./utils.js');\nvar soliditySha3 = require('./soliditySha3.js');\nvar randombytes = require('randombytes');\nvar BN = require('bn.js');\n/**\n * Fires an error in an event emitter and callback and returns the eventemitter\n *\n * @method _fireError\n * @param {Object} error a string, a error, or an object with {message, data}\n * @param {Object} emitter\n * @param {Function} reject\n * @param {Function} callback\n * @param {any} optionalData\n * @return {Object} the emitter\n */\nvar _fireError = function (error, emitter, reject, callback, optionalData) {\n    /*jshint maxcomplexity: 10 */\n    // add data if given\n    if (!!error && typeof error === 'object' && !(error instanceof Error) && error.data) {\n        if (!!error.data && typeof error.data === 'object' || Array.isArray(error.data)) {\n            error.data = JSON.stringify(error.data, null, 2);\n        }\n        error = error.message + \"\\n\" + error.data;\n    }\n    if (typeof error === 'string') {\n        error = new Error(error);\n    }\n    if (typeof callback === 'function') {\n        callback(error, optionalData);\n    }\n    if (typeof reject === 'function') {\n        // suppress uncatched error if an error listener is present\n        // OR suppress uncatched error if an callback listener is present\n        if (emitter &&\n            (typeof emitter.listeners === 'function' &&\n                emitter.listeners('error').length) || typeof callback === 'function') {\n            emitter.catch(function () { });\n        }\n        // reject later, to be able to return emitter\n        setTimeout(function () {\n            reject(error);\n        }, 1);\n    }\n    if (emitter && typeof emitter.emit === 'function') {\n        // emit later, to be able to return emitter\n        setTimeout(function () {\n            emitter.emit('error', error, optionalData);\n            emitter.removeAllListeners();\n        }, 1);\n    }\n    return emitter;\n};\n/**\n * Should be used to create full function/event name from json abi\n *\n * @method _jsonInterfaceMethodToString\n * @param {Object} json\n * @return {String} full function/event name\n */\nvar _jsonInterfaceMethodToString = function (json) {\n    if (!!json && typeof json === 'object' && json.name && json.name.indexOf('(') !== -1) {\n        return json.name;\n    }\n    return json.name + '(' + _flattenTypes(false, json.inputs).join(',') + ')';\n};\n/**\n * Should be used to flatten json abi inputs/outputs into an array of type-representing-strings\n *\n * @method _flattenTypes\n * @param {bool} includeTuple\n * @param {Object} puts\n * @return {Array} parameters as strings\n */\nvar _flattenTypes = function (includeTuple, puts) {\n    // console.log(\"entered _flattenTypes. inputs/outputs: \" + puts)\n    var types = [];\n    puts.forEach(function (param) {\n        if (typeof param.components === 'object') {\n            if (param.type.substring(0, 5) !== 'tuple') {\n                throw new Error('components found but type is not tuple; report on GitHub');\n            }\n            var suffix = '';\n            var arrayBracket = param.type.indexOf('[');\n            if (arrayBracket >= 0) {\n                suffix = param.type.substring(arrayBracket);\n            }\n            var result = _flattenTypes(includeTuple, param.components);\n            // console.log(\"result should have things: \" + result)\n            if (Array.isArray(result) && includeTuple) {\n                // console.log(\"include tuple word, and its an array. joining...: \" + result.types)\n                types.push('tuple(' + result.join(',') + ')' + suffix);\n            }\n            else if (!includeTuple) {\n                // console.log(\"don't include tuple, but its an array. joining...: \" + result)\n                types.push('(' + result.join(',') + ')' + suffix);\n            }\n            else {\n                // console.log(\"its a single type within a tuple: \" + result.types)\n                types.push('(' + result + ')');\n            }\n        }\n        else {\n            // console.log(\"its a type and not directly in a tuple: \" + param.type)\n            types.push(param.type);\n        }\n    });\n    return types;\n};\n/**\n * Returns a random hex string by the given bytes size\n *\n * @param {Number} size\n * @returns {string}\n */\nvar randomHex = function (size) {\n    return '0x' + randombytes(size).toString('hex');\n};\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method hexToAscii\n * @param {String} hex\n * @returns {String} ascii string representation of hex value\n */\nvar hexToAscii = function (hex) {\n    if (!utils.isHexStrict(hex))\n        throw new Error('The parameter must be a valid HEX string.');\n    var str = \"\";\n    var i = 0, l = hex.length;\n    if (hex.substring(0, 2) === '0x') {\n        i = 2;\n    }\n    for (; i < l; i += 2) {\n        var code = parseInt(hex.substr(i, 2), 16);\n        str += String.fromCharCode(code);\n    }\n    return str;\n};\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method asciiToHex\n * @param {String} str\n * @returns {String} hex representation of input string\n */\nvar asciiToHex = function (str) {\n    if (!str)\n        return \"0x00\";\n    var hex = \"\";\n    for (var i = 0; i < str.length; i++) {\n        var code = str.charCodeAt(i);\n        var n = code.toString(16);\n        hex += n.length < 2 ? '0' + n : n;\n    }\n    return \"0x\" + hex;\n};\n/**\n * Returns value of unit in Wei\n *\n * @method getUnitValue\n * @param {String} unit the unit to convert to, default ether\n * @returns {BN} value of the unit (in Wei)\n * @throws error if the unit is not correct:w\n */\nvar getUnitValue = function (unit) {\n    unit = unit ? unit.toLowerCase() : 'ether';\n    if (!ethjsUnit.unitMap[unit]) {\n        throw new Error('This unit \"' + unit + '\" doesn\\'t exist, please use the one of the following units' + JSON.stringify(ethjsUnit.unitMap, null, 2));\n    }\n    return unit;\n};\n/**\n * Takes a number of wei and converts it to any other ether unit.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method fromWei\n * @param {Number|String} number can be a number, number string or a HEX of a decimal\n * @param {String} unit the unit to convert to, default ether\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\n */\nvar fromWei = function (number, unit) {\n    unit = getUnitValue(unit);\n    if (!utils.isBN(number) && !(typeof number === 'string')) {\n        throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\n    }\n    return utils.isBN(number) ? ethjsUnit.fromWei(number, unit) : ethjsUnit.fromWei(number, unit).toString(10);\n};\n/**\n * Takes a number of a unit and converts it to wei.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method toWei\n * @param {Number|String|BN} number can be a number, number string or a HEX of a decimal\n * @param {String} unit the unit to convert from, default ether\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\n */\nvar toWei = function (number, unit) {\n    unit = getUnitValue(unit);\n    if (!utils.isBN(number) && !(typeof number === 'string')) {\n        throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\n    }\n    return utils.isBN(number) ? ethjsUnit.toWei(number, unit) : ethjsUnit.toWei(number, unit).toString(10);\n};\n/**\n * Converts to a checksum address\n *\n * @method toChecksumAddress\n * @param {String} address the given HEX address\n * @return {String}\n */\nvar toChecksumAddress = function (address) {\n    if (typeof address === 'undefined')\n        return '';\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address))\n        throw new Error('Given address \"' + address + '\" is not a valid Ethereum address.');\n    address = address.toLowerCase().replace(/^0x/i, '');\n    var addressHash = utils.sha3(address).replace(/^0x/i, '');\n    var checksumAddress = '0x';\n    for (var i = 0; i < address.length; i++) {\n        // If ith character is 8 to f then make it uppercase\n        if (parseInt(addressHash[i], 16) > 7) {\n            checksumAddress += address[i].toUpperCase();\n        }\n        else {\n            checksumAddress += address[i];\n        }\n    }\n    return checksumAddress;\n};\n/**\n * Returns -1 if a<b, 1 if a>b; 0 if a == b.\n * For more details on this type of function, see\n * developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\n *\n * @method compareBlockNumbers\n *\n * @param {String|Number|BN} a\n *\n * @param {String|Number|BN} b\n *\n * @returns {Number} -1, 0, or 1\n */\nvar compareBlockNumbers = function (a, b) {\n    if (a == b) {\n        return 0;\n    }\n    else if ((\"genesis\" == a || \"earliest\" == a || 0 == a) && (\"genesis\" == b || \"earliest\" == b || 0 == b)) {\n        return 0;\n    }\n    else if (\"genesis\" == a || \"earliest\" == a) {\n        // b !== a, thus a < b\n        return -1;\n    }\n    else if (\"genesis\" == b || \"earliest\" == b) {\n        // b !== a, thus a > b\n        return 1;\n    }\n    else if (a == \"latest\") {\n        if (b == \"pending\") {\n            return -1;\n        }\n        else {\n            // b !== (\"pending\" OR \"latest\"), thus a > b\n            return 1;\n        }\n    }\n    else if (b === \"latest\") {\n        if (a == \"pending\") {\n            return 1;\n        }\n        else {\n            // b !== (\"pending\" OR \"latest\"), thus a > b\n            return -1;\n        }\n    }\n    else if (a == \"pending\") {\n        // b (== OR <) \"latest\", thus a > b\n        return 1;\n    }\n    else if (b == \"pending\") {\n        return -1;\n    }\n    else {\n        let bnA = new BN(a);\n        let bnB = new BN(b);\n        if (bnA.lt(bnB)) {\n            return -1;\n        }\n        else if (bnA.eq(bnB)) {\n            return 0;\n        }\n        else {\n            return 1;\n        }\n    }\n};\nmodule.exports = {\n    _fireError: _fireError,\n    _jsonInterfaceMethodToString: _jsonInterfaceMethodToString,\n    _flattenTypes: _flattenTypes,\n    // extractDisplayName: extractDisplayName,\n    // extractTypeName: extractTypeName,\n    randomHex: randomHex,\n    BN: utils.BN,\n    isBN: utils.isBN,\n    isBigNumber: utils.isBigNumber,\n    isHex: utils.isHex,\n    isHexStrict: utils.isHexStrict,\n    sha3: utils.sha3,\n    sha3Raw: utils.sha3Raw,\n    keccak256: utils.sha3,\n    soliditySha3: soliditySha3.soliditySha3,\n    soliditySha3Raw: soliditySha3.soliditySha3Raw,\n    encodePacked: soliditySha3.encodePacked,\n    isAddress: utils.isAddress,\n    checkAddressChecksum: utils.checkAddressChecksum,\n    toChecksumAddress: toChecksumAddress,\n    toHex: utils.toHex,\n    toBN: utils.toBN,\n    bytesToHex: utils.bytesToHex,\n    hexToBytes: utils.hexToBytes,\n    hexToNumberString: utils.hexToNumberString,\n    hexToNumber: utils.hexToNumber,\n    toDecimal: utils.hexToNumber,\n    numberToHex: utils.numberToHex,\n    fromDecimal: utils.numberToHex,\n    hexToUtf8: utils.hexToUtf8,\n    hexToString: utils.hexToUtf8,\n    toUtf8: utils.hexToUtf8,\n    stripHexPrefix: utils.stripHexPrefix,\n    utf8ToHex: utils.utf8ToHex,\n    stringToHex: utils.utf8ToHex,\n    fromUtf8: utils.utf8ToHex,\n    hexToAscii: hexToAscii,\n    toAscii: hexToAscii,\n    asciiToHex: asciiToHex,\n    fromAscii: asciiToHex,\n    unitMap: ethjsUnit.unitMap,\n    toWei: toWei,\n    fromWei: fromWei,\n    padLeft: utils.leftPad,\n    leftPad: utils.leftPad,\n    padRight: utils.rightPad,\n    rightPad: utils.rightPad,\n    toTwosComplement: utils.toTwosComplement,\n    isBloom: utils.isBloom,\n    isUserEthereumAddressInBloom: utils.isUserEthereumAddressInBloom,\n    isContractAddressInBloom: utils.isContractAddressInBloom,\n    isTopic: utils.isTopic,\n    isTopicInBloom: utils.isTopicInBloom,\n    isInBloom: utils.isInBloom,\n    compareBlockNumbers: compareBlockNumbers,\n    toNumber: utils.toNumber\n};\n","/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file soliditySha3.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\nvar BN = require('bn.js');\nvar utils = require('./utils.js');\nvar _elementaryName = function (name) {\n    /*jshint maxcomplexity:false */\n    if (name.startsWith('int[')) {\n        return 'int256' + name.slice(3);\n    }\n    else if (name === 'int') {\n        return 'int256';\n    }\n    else if (name.startsWith('uint[')) {\n        return 'uint256' + name.slice(4);\n    }\n    else if (name === 'uint') {\n        return 'uint256';\n    }\n    else if (name.startsWith('fixed[')) {\n        return 'fixed128x128' + name.slice(5);\n    }\n    else if (name === 'fixed') {\n        return 'fixed128x128';\n    }\n    else if (name.startsWith('ufixed[')) {\n        return 'ufixed128x128' + name.slice(6);\n    }\n    else if (name === 'ufixed') {\n        return 'ufixed128x128';\n    }\n    return name;\n};\n// Parse N from type<N>\nvar _parseTypeN = function (type) {\n    var typesize = /^\\D+(\\d+).*$/.exec(type);\n    return typesize ? parseInt(typesize[1], 10) : null;\n};\n// Parse N from type[<N>]\nvar _parseTypeNArray = function (type) {\n    var arraySize = /^\\D+\\d*\\[(\\d+)\\]$/.exec(type);\n    return arraySize ? parseInt(arraySize[1], 10) : null;\n};\nvar _parseNumber = function (arg) {\n    var type = typeof arg;\n    if (type === 'string') {\n        if (utils.isHexStrict(arg)) {\n            return new BN(arg.replace(/0x/i, ''), 16);\n        }\n        else {\n            return new BN(arg, 10);\n        }\n    }\n    else if (type === 'number') {\n        return new BN(arg);\n    }\n    else if (utils.isBigNumber(arg)) {\n        return new BN(arg.toString(10));\n    }\n    else if (utils.isBN(arg)) {\n        return arg;\n    }\n    else {\n        throw new Error(arg + ' is not a number');\n    }\n};\nvar _solidityPack = function (type, value, arraySize) {\n    /*jshint maxcomplexity:false */\n    var size, num;\n    type = _elementaryName(type);\n    if (type === 'bytes') {\n        if (value.replace(/^0x/i, '').length % 2 !== 0) {\n            throw new Error('Invalid bytes characters ' + value.length);\n        }\n        return value;\n    }\n    else if (type === 'string') {\n        return utils.utf8ToHex(value);\n    }\n    else if (type === 'bool') {\n        return value ? '01' : '00';\n    }\n    else if (type.startsWith('address')) {\n        if (arraySize) {\n            size = 64;\n        }\n        else {\n            size = 40;\n        }\n        if (!utils.isAddress(value)) {\n            throw new Error(value + ' is not a valid address, or the checksum is invalid.');\n        }\n        return utils.leftPad(value.toLowerCase(), size);\n    }\n    size = _parseTypeN(type);\n    if (type.startsWith('bytes')) {\n        if (!size) {\n            throw new Error('bytes[] not yet supported in solidity');\n        }\n        // must be 32 byte slices when in an array\n        if (arraySize) {\n            size = 32;\n        }\n        if (size < 1 || size > 32 || size < value.replace(/^0x/i, '').length / 2) {\n            throw new Error('Invalid bytes' + size + ' for ' + value);\n        }\n        return utils.rightPad(value, size * 2);\n    }\n    else if (type.startsWith('uint')) {\n        if ((size % 8) || (size < 8) || (size > 256)) {\n            throw new Error('Invalid uint' + size + ' size');\n        }\n        num = _parseNumber(value);\n        if (num.bitLength() > size) {\n            throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength());\n        }\n        if (num.lt(new BN(0))) {\n            throw new Error('Supplied uint ' + num.toString() + ' is negative');\n        }\n        return size ? utils.leftPad(num.toString('hex'), size / 8 * 2) : num;\n    }\n    else if (type.startsWith('int')) {\n        if ((size % 8) || (size < 8) || (size > 256)) {\n            throw new Error('Invalid int' + size + ' size');\n        }\n        num = _parseNumber(value);\n        if (num.bitLength() > size) {\n            throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength());\n        }\n        if (num.lt(new BN(0))) {\n            return num.toTwos(size).toString('hex');\n        }\n        else {\n            return size ? utils.leftPad(num.toString('hex'), size / 8 * 2) : num;\n        }\n    }\n    else {\n        // FIXME: support all other types\n        throw new Error('Unsupported or invalid type: ' + type);\n    }\n};\nvar _processSolidityEncodePackedArgs = function (arg) {\n    /*jshint maxcomplexity:false */\n    if (Array.isArray(arg)) {\n        throw new Error('Autodetection of array types is not supported.');\n    }\n    var type, value = '';\n    var hexArg, arraySize;\n    // if type is given\n    if (!!arg && typeof arg === 'object' && (arg.hasOwnProperty('v') || arg.hasOwnProperty('t') || arg.hasOwnProperty('value') || arg.hasOwnProperty('type'))) {\n        type = arg.hasOwnProperty('t') ? arg.t : arg.type;\n        value = arg.hasOwnProperty('v') ? arg.v : arg.value;\n        // otherwise try to guess the type\n    }\n    else {\n        type = utils.toHex(arg, true);\n        value = utils.toHex(arg);\n        if (!type.startsWith('int') && !type.startsWith('uint')) {\n            type = 'bytes';\n        }\n    }\n    if ((type.startsWith('int') || type.startsWith('uint')) && typeof value === 'string' && !/^(-)?0x/i.test(value)) {\n        value = new BN(value);\n    }\n    // get the array size\n    if (Array.isArray(value)) {\n        arraySize = _parseTypeNArray(type);\n        if (arraySize && value.length !== arraySize) {\n            throw new Error(type + ' is not matching the given array ' + JSON.stringify(value));\n        }\n        else {\n            arraySize = value.length;\n        }\n    }\n    if (Array.isArray(value)) {\n        hexArg = value.map(function (val) {\n            return _solidityPack(type, val, arraySize).toString('hex').replace('0x', '');\n        });\n        return hexArg.join('');\n    }\n    else {\n        hexArg = _solidityPack(type, value, arraySize);\n        return hexArg.toString('hex').replace('0x', '');\n    }\n};\n/**\n * Hashes solidity values to a sha3 hash using keccak 256\n *\n * @method soliditySha3\n * @return {Object} the sha3\n */\nvar soliditySha3 = function () {\n    /*jshint maxcomplexity:false */\n    var args = Array.prototype.slice.call(arguments);\n    var hexArgs = args.map(_processSolidityEncodePackedArgs);\n    // console.log(args, hexArgs);\n    // console.log('0x'+ hexArgs.join(''));\n    return utils.sha3('0x' + hexArgs.join(''));\n};\n/**\n * Hashes solidity values to a sha3 hash using keccak 256 but does return the hash of value `null` instead of `null`\n *\n * @method soliditySha3Raw\n * @return {Object} the sha3\n */\nvar soliditySha3Raw = function () {\n    return utils.sha3Raw('0x' + Array.prototype.slice.call(arguments).map(_processSolidityEncodePackedArgs).join(''));\n};\n/**\n * Encode packed args to hex\n *\n * @method encodePacked\n * @return {String} the hex encoded arguments\n */\nvar encodePacked = function () {\n    /*jshint maxcomplexity:false */\n    var args = Array.prototype.slice.call(arguments);\n    var hexArgs = args.map(_processSolidityEncodePackedArgs);\n    return '0x' + hexArgs.join('').toLowerCase();\n};\nmodule.exports = {\n    soliditySha3: soliditySha3,\n    soliditySha3Raw: soliditySha3Raw,\n    encodePacked: encodePacked\n};\n","/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file utils.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\nvar BN = require('bn.js');\nvar numberToBN = require('number-to-bn');\nvar utf8 = require('utf8');\nvar Hash = require(\"eth-lib/lib/hash\");\nvar ethereumBloomFilters = require('ethereum-bloom-filters');\n/**\n * Returns true if object is BN, otherwise false\n *\n * @method isBN\n * @param {Object} object\n * @return {Boolean}\n */\nvar isBN = function (object) {\n    return BN.isBN(object);\n};\n/**\n * Returns true if object is BigNumber, otherwise false\n *\n * @method isBigNumber\n * @param {Object} object\n * @return {Boolean}\n */\nvar isBigNumber = function (object) {\n    return object && object.constructor && object.constructor.name === 'BigNumber';\n};\n/**\n * Takes an input and transforms it into an BN\n *\n * @method toBN\n * @param {Number|String|BN} number, string, HEX string or BN\n * @return {BN} BN\n */\nvar toBN = function (number) {\n    try {\n        return numberToBN.apply(null, arguments);\n    }\n    catch (e) {\n        throw new Error(e + ' Given value: \"' + number + '\"');\n    }\n};\n/**\n * Takes and input transforms it into BN and if it is negative value, into two's complement\n *\n * @method toTwosComplement\n * @param {Number|String|BN} number\n * @return {String}\n */\nvar toTwosComplement = function (number) {\n    return '0x' + toBN(number).toTwos(256).toString(16, 64);\n};\n/**\n * Checks if the given string is an address\n *\n * @method isAddress\n * @param {String} address the given HEX address\n * @return {Boolean}\n */\nvar isAddress = function (address) {\n    // check if it has the basic requirements of an address\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n        return false;\n        // If it's ALL lowercase or ALL upppercase\n    }\n    else if (/^(0x|0X)?[0-9a-f]{40}$/.test(address) || /^(0x|0X)?[0-9A-F]{40}$/.test(address)) {\n        return true;\n        // Otherwise check each case\n    }\n    else {\n        return checkAddressChecksum(address);\n    }\n};\n/**\n * Checks if the given string is a checksummed address\n *\n * @method checkAddressChecksum\n * @param {String} address the given HEX address\n * @return {Boolean}\n */\nvar checkAddressChecksum = function (address) {\n    // Check each case\n    address = address.replace(/^0x/i, '');\n    var addressHash = sha3(address.toLowerCase()).replace(/^0x/i, '');\n    for (var i = 0; i < 40; i++) {\n        // the nth letter should be uppercase if the nth digit of casemap is 1\n        if ((parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i]) || (parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i])) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * Should be called to pad string to expected length\n *\n * @method leftPad\n * @param {String} string to be padded\n * @param {Number} chars that result string should have\n * @param {String} sign, by default 0\n * @returns {String} right aligned string\n */\nvar leftPad = function (string, chars, sign) {\n    var hasPrefix = /^0x/i.test(string) || typeof string === 'number';\n    string = string.toString(16).replace(/^0x/i, '');\n    var padding = (chars - string.length + 1 >= 0) ? chars - string.length + 1 : 0;\n    return (hasPrefix ? '0x' : '') + new Array(padding).join(sign ? sign : \"0\") + string;\n};\n/**\n * Should be called to pad string to expected length\n *\n * @method rightPad\n * @param {String} string to be padded\n * @param {Number} chars that result string should have\n * @param {String} sign, by default 0\n * @returns {String} right aligned string\n */\nvar rightPad = function (string, chars, sign) {\n    var hasPrefix = /^0x/i.test(string) || typeof string === 'number';\n    string = string.toString(16).replace(/^0x/i, '');\n    var padding = (chars - string.length + 1 >= 0) ? chars - string.length + 1 : 0;\n    return (hasPrefix ? '0x' : '') + string + (new Array(padding).join(sign ? sign : \"0\"));\n};\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method utf8ToHex\n * @param {String} str\n * @returns {String} hex representation of input string\n */\nvar utf8ToHex = function (str) {\n    str = utf8.encode(str);\n    var hex = \"\";\n    // remove \\u0000 padding from either side\n    str = str.replace(/^(?:\\u0000)*/, '');\n    str = str.split(\"\").reverse().join(\"\");\n    str = str.replace(/^(?:\\u0000)*/, '');\n    str = str.split(\"\").reverse().join(\"\");\n    for (var i = 0; i < str.length; i++) {\n        var code = str.charCodeAt(i);\n        // if (code !== 0) {\n        var n = code.toString(16);\n        hex += n.length < 2 ? '0' + n : n;\n        // }\n    }\n    return \"0x\" + hex;\n};\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method hexToUtf8\n * @param {String} hex\n * @returns {String} ascii string representation of hex value\n */\nvar hexToUtf8 = function (hex) {\n    if (!isHexStrict(hex))\n        throw new Error('The parameter \"' + hex + '\" must be a valid HEX string.');\n    var str = \"\";\n    var code = 0;\n    hex = hex.replace(/^0x/i, '');\n    // remove 00 padding from either side\n    hex = hex.replace(/^(?:00)*/, '');\n    hex = hex.split(\"\").reverse().join(\"\");\n    hex = hex.replace(/^(?:00)*/, '');\n    hex = hex.split(\"\").reverse().join(\"\");\n    var l = hex.length;\n    for (var i = 0; i < l; i += 2) {\n        code = parseInt(hex.substr(i, 2), 16);\n        // if (code !== 0) {\n        str += String.fromCharCode(code);\n        // }\n    }\n    return utf8.decode(str);\n};\n/**\n * Converts value to it's number representation\n *\n * @method hexToNumber\n * @param {String|Number|BN} value\n * @return {String}\n */\nvar hexToNumber = function (value) {\n    if (!value) {\n        return value;\n    }\n    if (typeof value === 'string' && !isHexStrict(value)) {\n        throw new Error('Given value \"' + value + '\" is not a valid hex string.');\n    }\n    return toBN(value).toNumber();\n};\n/**\n * Converts value to it's decimal representation in string\n *\n * @method hexToNumberString\n * @param {String|Number|BN} value\n * @return {String}\n */\nvar hexToNumberString = function (value) {\n    if (!value)\n        return value;\n    if (typeof value === 'string' && !isHexStrict(value)) {\n        throw new Error('Given value \"' + value + '\" is not a valid hex string.');\n    }\n    return toBN(value).toString(10);\n};\n/**\n * Converts value to it's hex representation\n *\n * @method numberToHex\n * @param {String|Number|BN} value\n * @return {String}\n */\nvar numberToHex = function (value) {\n    if ((value === null || value === undefined)) {\n        return value;\n    }\n    if (!isFinite(value) && !isHexStrict(value)) {\n        throw new Error('Given input \"' + value + '\" is not a number.');\n    }\n    var number = toBN(value);\n    var result = number.toString(16);\n    return number.lt(new BN(0)) ? '-0x' + result.substr(1) : '0x' + result;\n};\n/**\n * Convert a byte array to a hex string\n *\n * Note: Implementation from crypto-js\n *\n * @method bytesToHex\n * @param {Array} bytes\n * @return {String} the hex string\n */\nvar bytesToHex = function (bytes) {\n    for (var hex = [], i = 0; i < bytes.length; i++) {\n        /* jshint ignore:start */\n        hex.push((bytes[i] >>> 4).toString(16));\n        hex.push((bytes[i] & 0xF).toString(16));\n        /* jshint ignore:end */\n    }\n    return '0x' + hex.join(\"\");\n};\n/**\n * Convert a hex string to a byte array\n *\n * Note: Implementation from crypto-js\n *\n * @method hexToBytes\n * @param {string} hex\n * @return {Array} the byte array\n */\nvar hexToBytes = function (hex) {\n    hex = hex.toString(16);\n    if (!isHexStrict(hex)) {\n        throw new Error('Given value \"' + hex + '\" is not a valid hex string.');\n    }\n    hex = hex.replace(/^0x/i, '');\n    for (var bytes = [], c = 0; c < hex.length; c += 2)\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n    return bytes;\n};\n/**\n * Auto converts any given value into it's hex representation.\n *\n * And even stringifys objects before.\n *\n * @method toHex\n * @param {String|Number|BN|Object|Buffer} value\n * @param {Boolean} returnType\n * @return {String}\n */\nvar toHex = function (value, returnType) {\n    /*jshint maxcomplexity: false */\n    if (isAddress(value)) {\n        return returnType ? 'address' : '0x' + value.toLowerCase().replace(/^0x/i, '');\n    }\n    if (typeof value === 'boolean') {\n        return returnType ? 'bool' : value ? '0x01' : '0x00';\n    }\n    if (Buffer.isBuffer(value)) {\n        return '0x' + value.toString('hex');\n    }\n    if (typeof value === 'object' && !!value && !isBigNumber(value) && !isBN(value)) {\n        return returnType ? 'string' : utf8ToHex(JSON.stringify(value));\n    }\n    // if its a negative number, pass it through numberToHex\n    if (typeof value === 'string') {\n        if (value.indexOf('-0x') === 0 || value.indexOf('-0X') === 0) {\n            return returnType ? 'int256' : numberToHex(value);\n        }\n        else if (value.indexOf('0x') === 0 || value.indexOf('0X') === 0) {\n            return returnType ? 'bytes' : value;\n        }\n        else if (!isFinite(value)) {\n            return returnType ? 'string' : utf8ToHex(value);\n        }\n    }\n    return returnType ? (value < 0 ? 'int256' : 'uint256') : numberToHex(value);\n};\n/**\n * Check if string is HEX, requires a 0x in front\n *\n * @method isHexStrict\n * @param {String} hex to be checked\n * @returns {Boolean}\n */\nvar isHexStrict = function (hex) {\n    return ((typeof hex === 'string' || typeof hex === 'number') && /^(-)?0x[0-9a-f]*$/i.test(hex));\n};\n/**\n * Check if string is HEX\n *\n * @method isHex\n * @param {String} hex to be checked\n * @returns {Boolean}\n */\nvar isHex = function (hex) {\n    return ((typeof hex === 'string' || typeof hex === 'number') && /^(-0x|0x)?[0-9a-f]*$/i.test(hex));\n};\n/**\n * Remove 0x prefix from string\n *\n * @method stripHexPrefix\n * @param {String} str to be checked\n * @returns {String}\n */\nvar stripHexPrefix = function (str) {\n    if (str !== 0 && isHex(str))\n        return str.replace(/^(-)?0x/i, '$1');\n    return str;\n};\n/**\n * Returns true if given string is a valid Ethereum block header bloom.\n *\n * @method isBloom\n * @param {String} bloom encoded bloom filter\n * @return {Boolean}\n */\nvar isBloom = function (bloom) {\n    return ethereumBloomFilters.isBloom(bloom);\n};\n/**\n * Returns true if the ethereum users address is part of the given bloom\n * note: false positives are possible.\n *\n * @method isUserEthereumAddressInBloom\n * @param {String} ethereumAddress encoded bloom filter\n * @param {String} bloom ethereum addresss\n * @return {Boolean}\n */\nvar isUserEthereumAddressInBloom = function (bloom, ethereumAddress) {\n    return ethereumBloomFilters.isUserEthereumAddressInBloom(bloom, ethereumAddress);\n};\n/**\n * Returns true if the contract address is part of the given bloom\n * note: false positives are possible.\n *\n * @method isUserEthereumAddressInBloom\n * @param {String} bloom encoded bloom filter\n * @param {String} contractAddress contract addresss\n * @return {Boolean}\n */\nvar isContractAddressInBloom = function (bloom, contractAddress) {\n    return ethereumBloomFilters.isContractAddressInBloom(bloom, contractAddress);\n};\n/**\n * Returns true if given string is a valid log topic.\n *\n * @method isTopic\n * @param {String} topic encoded topic\n * @return {Boolean}\n */\nvar isTopic = function (topic) {\n    return ethereumBloomFilters.isTopic(topic);\n};\n/**\n * Returns true if the topic is part of the given bloom\n * note: false positives are possible.\n *\n * @method isTopicInBloom\n * @param {String} bloom encoded bloom filter\n * @param {String} topic encoded topic\n * @return {Boolean}\n */\nvar isTopicInBloom = function (bloom, topic) {\n    return ethereumBloomFilters.isTopicInBloom(bloom, topic);\n};\n/**\n * Returns true if the value is part of the given bloom\n * note: false positives are possible.\n *\n * @method isInBloom\n * @param {String} bloom encoded bloom filter\n * @param {String | Uint8Array} topic encoded value\n * @return {Boolean}\n */\nvar isInBloom = function (bloom, topic) {\n    return ethereumBloomFilters.isInBloom(bloom, topic);\n};\n/**\n * Hashes values to a sha3 hash using keccak 256\n *\n * To hash a HEX string the hex must have 0x in front.\n *\n * @method sha3\n * @return {String} the sha3 string\n */\nvar SHA3_NULL_S = '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\nvar sha3 = function (value) {\n    if (isBN(value)) {\n        value = value.toString();\n    }\n    if (isHexStrict(value) && /^0x/i.test((value).toString())) {\n        value = hexToBytes(value);\n    }\n    var returnValue = Hash.keccak256(value); // jshint ignore:line\n    if (returnValue === SHA3_NULL_S) {\n        return null;\n    }\n    else {\n        return returnValue;\n    }\n};\n// expose the under the hood keccak256\nsha3._Hash = Hash;\n/**\n * @method sha3Raw\n *\n * @param value\n *\n * @returns {string}\n */\nvar sha3Raw = function (value) {\n    value = sha3(value);\n    if (value === null) {\n        return SHA3_NULL_S;\n    }\n    return value;\n};\n/**\n * Auto converts any given value into it's hex representation,\n * then converts hex to number.\n *\n * @method toNumber\n * @param {String|Number|BN} value\n * @return {Number}\n */\nvar toNumber = function (value) {\n    return typeof value === 'number' ? value : hexToNumber(toHex(value));\n};\nmodule.exports = {\n    BN: BN,\n    isBN: isBN,\n    isBigNumber: isBigNumber,\n    toBN: toBN,\n    isAddress: isAddress,\n    isBloom: isBloom,\n    isUserEthereumAddressInBloom: isUserEthereumAddressInBloom,\n    isContractAddressInBloom: isContractAddressInBloom,\n    isTopic: isTopic,\n    isTopicInBloom: isTopicInBloom,\n    isInBloom: isInBloom,\n    checkAddressChecksum: checkAddressChecksum,\n    utf8ToHex: utf8ToHex,\n    hexToUtf8: hexToUtf8,\n    hexToNumber: hexToNumber,\n    hexToNumberString: hexToNumberString,\n    numberToHex: numberToHex,\n    toHex: toHex,\n    hexToBytes: hexToBytes,\n    bytesToHex: bytesToHex,\n    isHex: isHex,\n    isHexStrict: isHexStrict,\n    stripHexPrefix: stripHexPrefix,\n    leftPad: leftPad,\n    rightPad: rightPad,\n    toTwosComplement: toTwosComplement,\n    sha3: sha3,\n    sha3Raw: sha3Raw,\n    toNumber: toNumber\n};\n"],"names":["Object","defineProperty","exports","value","DEFAULT_ENDPOINT","BuidlhubEnsClient","props","arguments","length","undefined","endpoint","this","_validatePropsExist","publicAddress","emailAddress","language","_post","walletAddress","email","requiredProps","propertyName","Error","concat","resourcePath","body","url","options","method","headers","_window","window","_window$location","location","hostname","JSON","stringify","_fetchWithRetry","response","data","json","error","maxAttempts","lastError","i","fetch","Promise","resolve","setTimeout","_core","require","_react","_interopRequireDefault","_styled","_BuidlhubEnsClient","_LoadingComponent","obj","__esModule","default","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","DEFAULT_TRANSLATION","cancel","close","loading","placeholder","registerSuccess","registerFailure","invalidEmailAddress","submit","DEFAULT_STYLES","actionsContainer","emailInput","EmailComponent","buidlhub","translation","state","statusMessage","hasSubmitted","subscription","components","buildStyledComponents","getClient","bind","handleCancel","handleEmailInputChange","handleFormSubmit","validateForm","prefix","defaultType","passedComponent","component","componentStyle","console","log","ActionsContainer","buildStyledComponent","Cancel","EmailInput","Form","Label","MessageContainer","Submit","Loading","loadingComponent","event","onCancel","preventDefault","setState","addSubscription","isRegistered","status","handleError","emailInputElem","isValid","checkValidity","test","message","formActions","_renderFormBody","jsx","Fragment","type","onClick","onSubmit","className","address","label","name","id","required","onChange","ref","elem","Component","_templateObject","strings","raw","slice","freeze","_taggedTemplateLiteral","LoadingComponent","DefaultSpinner","PureComponent","get","_EmailComponent","newStyled","styled","tagName","globalScope","Decimal","inexact","quadrant","EXP_LIMIT","MAX_DIGITS","NUMERALS","LN10","PI","DEFAULTS","precision","rounding","modulo","toExpNeg","toExpPos","minE","maxE","crypto","external","decimalError","invalidArgument","precisionLimitExceeded","cryptoUnavailable","tag","mathfloor","Math","floor","mathpow","pow","isBinary","isHex","isOctal","isDecimal","BASE","LN10_PRECISION","PI_PRECISION","P","toStringTag","digitsToString","d","k","ws","indexOfLastWord","str","w","getZeroString","checkInt32","min","max","checkRoundingDigits","rm","repeating","di","r","rd","ceil","convertBase","baseIn","baseOut","j","arrL","arr","strL","indexOf","charAt","reverse","absoluteValue","abs","x","constructor","s","finalise","e","clampedTo","clamp","Ctor","NaN","gt","cmp","comparedTo","y","xdL","ydL","xd","yd","xs","ys","cosine","cos","pr","sd","len","isZero","tinyPow","toString","taylorSeries","times","cos2x","minus","plus","toLessThanHalfPi","neg","cubeRoot","cbrt","m","n","rep","t","t3","t3plusx","isFinite","toExponential","divide","eq","decimalPlaces","dp","dividedBy","div","dividedToIntegerBy","divToInt","equals","greaterThan","greaterThanOrEqualTo","gte","hyperbolicCosine","cosh","one","cosh2_x","d8","hyperbolicSine","sinh","sqrt","sinh2_x","d5","d16","d20","hyperbolicTangent","tanh","inverseCosine","acos","halfPi","isNeg","getPi","asin","inverseHyperbolicCosine","acosh","lte","ln","inverseHyperbolicSine","asinh","inverseHyperbolicTangent","atanh","wpr","xsd","inverseSine","atan","inverseTangent","px","x2","isInteger","isInt","isNaN","isNegative","isPositive","isPos","lessThan","lt","lessThanOrEqualTo","logarithm","base","isBase10","denominator","inf","num","arg","naturalLogarithm","getLn10","sub","xe","xLTy","pop","shift","getBase10Exponent","mod","q","naturalExponential","exp","negated","add","carry","unshift","z","getPrecision","round","sine","sin","sin2_x","squareRoot","tangent","tan","mul","rL","toBinary","toStringBinary","toDecimalPlaces","toDP","finiteToString","toFixed","toFraction","maxD","d0","d1","d2","n0","n1","toHexadecimal","toHex","toNearest","toNumber","toOctal","toPower","yn","intPow","toPrecision","toSignificantDigits","toSD","truncated","trunc","valueOf","toJSON","multiplyInteger","temp","compare","a","b","aL","bL","subtract","logBase","more","prod","prodL","qd","rem","remL","rem0","xi","xL","yd0","yL","yz","sign","isTruncated","digits","roundUp","xdi","out","isExp","nonFiniteToString","zs","truncate","isOdd","maxOrMin","args","ltgt","guard","sum","c","c0","numerator","x1","String","parseDecimal","replace","search","substring","charCodeAt","parseOther","divisor","isFloat","p","toLowerCase","isHyperbolic","u","pi","atan2","config","v","useDefaults","defaults","ps","getRandomValues","randomBytes","hypot","isDecimalInstance","log2","log10","random","Uint32Array","copy","clone","prototype","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","set","hasOwnProperty","define","PreciseDecimal","toDecimal","isBN","input2Dec","original","input","_n","to","_unit","EthVal","src","unit","call","isWei","isGwei","scaleDown","isEth","scaleUp","toWei","toGwei","toEth","substr","toBN","module","array","iteratee","index","result","Array","castPath","toKey","path","Symbol","arrayMap","isArray","isSymbol","symbolProto","symbolToString","baseToString","isKey","stringToPath","reIsDeepProp","reIsPlainProp","memoize","func","cache","size","clear","memoizeCapped","rePropName","reEscapeChar","string","match","number","quote","subString","baseGet","defaultValue","baseGetTag","isObjectLike","MapCache","resolver","TypeError","memoized","has","Cache","SHARE_SITES","GOOGLE","ICAL","OUTLOOK","YAHOO","WrappedButton","WrappedDropdown","_class","_temp2","_Component","AddToCalendarWrapped","_getPrototypeOf2","_temp","_this","_classCallCheck","_len","_key","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","dropdownOpen","filename","currentTarget","getAttribute","startsWith","blob","Blob","_utils","isInternetExplorer","navigator","msSaveOrOpenBlob","link","document","createElement","href","URL","createObjectURL","setAttribute","appendChild","click","removeChild","open","prevState","subClass","superClass","create","_setPrototypeOf","_inherits","Constructor","protoProps","staticProps","_defineProperties","_createClass","_this2","_this$props","buttonProps","buttonText","dropdownProps","items","linkProps","_extends","handleDropdownToggle","isOpen","onRequestClose","map","item","handleCalendarButtonClick","buildShareUrl","_propTypes","shape","node","description","duration","oneOfType","isRequired","endDatetime","startDatetime","title","arrayOf","oneOf","_enums","itm","newObj","desc","_interopRequireWildcard","_typeof","iterator","assign","instance","descriptor","self","o","setPrototypeOf","getPrototypeOf","__proto__","ReferenceError","escapeICSDescription","isMobile","formatDuration","formatDate","date","parts","split","part","join","userAgent","vendor","opera","buildShareFile","_ref3","_ref3$description","ctz","_ref3$location","_ref3$timezone","timezone","_ref3$title","content","encodeURI","_ref4","_ref4$description","_ref4$location","_ref4$timezone","_ref4$title","encodeURIComponent","_ref","googleShareUrl","_ref2","yahooShareUrl","ethjsUnit","utils","soliditySha3","randombytes","BN","_flattenTypes","includeTuple","puts","types","param","suffix","arrayBracket","hexToAscii","hex","isHexStrict","l","code","parseInt","fromCharCode","asciiToHex","getUnitValue","unitMap","_fireError","emitter","reject","callback","optionalData","listeners","emit","removeAllListeners","_jsonInterfaceMethodToString","inputs","randomHex","isBigNumber","sha3","sha3Raw","keccak256","soliditySha3Raw","encodePacked","isAddress","checkAddressChecksum","toChecksumAddress","addressHash","checksumAddress","toUpperCase","bytesToHex","hexToBytes","hexToNumberString","hexToNumber","numberToHex","fromDecimal","hexToUtf8","hexToString","toUtf8","stripHexPrefix","utf8ToHex","stringToHex","fromUtf8","toAscii","fromAscii","fromWei","padLeft","leftPad","padRight","rightPad","toTwosComplement","isBloom","isUserEthereumAddressInBloom","isContractAddressInBloom","isTopic","isTopicInBloom","isInBloom","compareBlockNumbers","bnA","bnB","_parseNumber","_solidityPack","arraySize","typesize","exec","_parseTypeN","bitLength","toTwos","_processSolidityEncodePackedArgs","_parseTypeNArray","val","hexArgs","numberToBN","utf8","Hash","ethereumBloomFilters","encode","bytes","returnType","Buffer","isBuffer","SHA3_NULL_S","returnValue","_Hash","bloom","ethereumAddress","contractAddress","topic","decode","chars","hasPrefix","padding"],"sourceRoot":""}